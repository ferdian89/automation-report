Function GetAttachment_SCDPlant_Ferry(Optional targetDate As Date) As String
    Dim olApp As Object, olNs As Object, olFolder As Object
    Dim olItems As Object, olMail As Object, olAtmt As Object
    Dim fileName As String, savePath As String

    fileName = "02.Daily Report SCD  Hydro Plant (HO) Agustus 2025.xlsx"
    savePath = Environ("TEMP") & "\" & fileName
    If targetDate = 0 Then targetDate = Date - 1 ' default: kemarin

    Set olApp = GetObject(, "Outlook.Application")
    Set olNs = olApp.GetNamespace("MAPI")
    Set olFolder = olNs.GetDefaultFolder(6) ' Inbox
    Set olItems = olFolder.Items
    olItems.Sort "ReceivedTime", True

    For Each olMail In olItems
        If TypeName(olMail) = "MailItem" Then
            If Int(olMail.ReceivedTime) = Date Then ' Email hari ini
                If InStr(1, olMail.senderName, "Ferry Hermansyah Lubis", vbTextCompare) > 0 Then
                    For Each olAtmt In olMail.Attachments
                        If olAtmt.fileName = fileName Then
                            On Error Resume Next: Kill savePath: On Error GoTo 0
                            olAtmt.SaveAsFile savePath
                            GetAttachment_SCDPlant_Ferry = savePath
                            Exit Function
                        End If
                    Next
                End If
            End If
        End If
    Next

    GetAttachment_SCDPlant_Ferry = ""
End Function


Sub GetSCDPlant_OutputFinal()
    Dim tempFile As String
    Dim xlApp As Object, xlWb As Object, xlWs As Worksheet
    Dim wsDest As Worksheet
    Dim targetDate As Date, searchValueDate As Date
    Dim lastDataRow As Long, lastRow As Long
    Dim i As Long, maxCol As Long
    Dim inputCol As Long, prodCol As Long, descColBX As Long, descColCN As Long
    Dim foundProdCol As Boolean, foundInputCol As Boolean
    Dim inputProcessedTotal As Double
    Dim dictProducts As Object, dictDescriptions As Object
    Dim prod As String, desc1 As String, desc2 As String, descCombined As String, key As Variant
    Dim joinedProducts As String, joinedDescriptions As String
    Dim sheetName As String

    Set dictProducts = CreateObject("Scripting.Dictionary")
    Set dictDescriptions = CreateObject("Scripting.Dictionary")

    targetDate = Date - 1
    searchValueDate = targetDate
    sheetName = Format(searchValueDate, "dd-mm-yyyy")

    ' Buat worksheet tujuan
    On Error Resume Next
    Set wsDest = ThisWorkbook.Sheets(sheetName)
    If wsDest Is Nothing Then
        Set wsDest = ThisWorkbook.Sheets.Add(After:=ThisWorkbook.Sheets(ThisWorkbook.Sheets.Count))
        wsDest.Name = sheetName
    End If
    On Error GoTo 0

    ' Ambil file dari email
    tempFile = GetAttachment_SCDPlant_Ferry(searchValueDate)
    If tempFile = "" Then
        MsgBox "File tidak ditemukan.", vbExclamation
        Exit Sub
    End If

    Set xlApp = CreateObject("Excel.Application")
    xlApp.Visible = False
    Set xlWb = xlApp.Workbooks.Open(tempFile, ReadOnly:=True)

    ' Loop setiap sheet di file
    For Each xlWs In xlWb.Sheets
        Dim currentLabel As String
        inputProcessedTotal = 0
        Set dictProducts = CreateObject("Scripting.Dictionary")
        Set dictDescriptions = CreateObject("Scripting.Dictionary")
        foundInputCol = False: foundProdCol = False
        descColBX = 76: descColCN = 92

        If LCase(xlWs.Name) Like "*scd*" Then
            currentLabel = "SCD Plant"
            maxCol = xlWs.Cells(9, xlWs.Columns.Count).End(xlToLeft).Column
            lastDataRow = xlWs.Cells(xlWs.Rows.Count, 1).End(xlUp).row

            For i = 1 To maxCol
                If Trim(xlWs.Cells(9, i).MergeArea.Cells(1, 1).Value) = "Product" And _
                   Trim(xlWs.Cells(10, i).Value) = "Refined" Then
                    prodCol = i: foundProdCol = True
                End If
                If Trim(xlWs.Cells(9, i).MergeArea.Cells(1, 1).Value) = "Input Processed" And _
                   Trim(xlWs.Cells(10, i).Value) = "Kg" Then
                    inputCol = i: foundInputCol = True
                End If
            Next i

            For i = 1 To lastDataRow
                If IsDate(xlWs.Cells(i, 1).Value) Then
                    If Int(xlWs.Cells(i, 1).Value) = Int(searchValueDate) Then
                        If foundProdCol Then
                            prod = Trim(xlWs.Cells(i, prodCol).Value)
                            If prod <> "" And Not dictProducts.exists(prod) Then dictProducts.Add prod, True
                        End If
                        If foundInputCol And IsNumeric(xlWs.Cells(i, inputCol).Value) Then
                            inputProcessedTotal = inputProcessedTotal + CDbl(xlWs.Cells(i, inputCol).Value)
                        End If
                        desc1 = Trim(xlWs.Cells(i, descColBX).Value)
                        desc2 = Trim(xlWs.Cells(i, descColCN).Value)
                        descCombined = JoinDescriptions(desc1, desc2)
                        If descCombined <> "" And Not dictDescriptions.exists(descCombined) Then dictDescriptions.Add descCombined, True
                    End If
                End If
            Next i

        ElseIf LCase(xlWs.Name) Like "*ie*" Or LCase(xlWs.Name) Like "*hyd*" Then
            If LCase(xlWs.Name) Like "*ie*" Then
                currentLabel = "IE-FAT Plant"
                headerRow1 = 6: headerRow2 = 7: descColBX = 48
            Else
                currentLabel = "Hydrogenation"
                headerRow1 = 9: headerRow2 = 10: descColBX = 51
            End If

            maxCol = xlWs.Cells(headerRow1, xlWs.Columns.Count).End(xlToLeft).Column
            lastDataRow = xlWs.Cells(xlWs.Rows.Count, 1).End(xlUp).row

            For i = 1 To maxCol
                If Trim(xlWs.Cells(headerRow1, i).MergeArea.Cells(1, 1).Value) = "Product" Then
                    If LCase(Trim(xlWs.Cells(headerRow2, i).Value)) Like "*hydrogenated*" Or _
                       LCase(Trim(xlWs.Cells(headerRow2, i).Value)) Like "*refined*" Then
                        prodCol = i: foundProdCol = True
                    End If
                End If
                If Trim(xlWs.Cells(headerRow1, i).MergeArea.Cells(1, 1).Value) = "Input processed" And _
                   LCase(Trim(xlWs.Cells(headerRow2, i).Value)) = "kg" Then
                    inputCol = i: foundInputCol = True
                End If
            Next i

            For i = 1 To lastDataRow
                If IsDate(xlWs.Cells(i, 1).Value) Then
                    If Int(xlWs.Cells(i, 1).Value) = Int(searchValueDate) Then
                        If foundProdCol Then
                            prod = Trim(xlWs.Cells(i, prodCol).Value)
                            If prod <> "" And Not dictProducts.exists(prod) Then dictProducts.Add prod, True
                        End If
                        If foundInputCol And IsNumeric(xlWs.Cells(i, inputCol).Value) Then
                            inputProcessedTotal = inputProcessedTotal + CDbl(xlWs.Cells(i, inputCol).Value)
                        End If
                        desc1 = Trim(xlWs.Cells(i, descColBX).Value)
                        If desc1 <> "" And Not dictDescriptions.exists(desc1) Then dictDescriptions.Add desc1, True
                    End If
                End If
            Next i
        Else
            ' Skip sheet lainnya
            GoTo NextSheet
        End If

        ' Gabungkan hasil dan tulis ke worksheet
        joinedProducts = JoinDictionaryKeys(dictProducts)
        joinedDescriptions = JoinDictionaryKeys(dictDescriptions)
        lastRow = wsDest.Cells(wsDest.Rows.Count, 1).End(xlUp).row + 2

        wsDest.Cells(lastRow, 1).Value = currentLabel
        If inputProcessedTotal > 0 Then
            wsDest.Cells(lastRow + 1, 1).Value = "Running : " & IIf(joinedProducts <> "", joinedProducts, "-")
            wsDest.Cells(lastRow + 2, 1).Value = "Input Processed : " & Format(inputProcessedTotal / 1000, "0") & " Ton"
            If joinedDescriptions <> "" Then
                wsDest.Cells(lastRow + 3, 1).Value = "Description : " & joinedDescriptions
            End If
        Else
            wsDest.Cells(lastRow + 1, 1).Value = "Stop Plant"
            wsDest.Cells(lastRow + 2, 1).Value = "Fit to PPIC Planning"
        End If

NextSheet:
    Next xlWs

    xlWb.Close False
    xlApp.Quit
    Set xlApp = Nothing: Set xlWb = Nothing

    MsgBox "Output SCD, IE-FAT, dan HYD berhasil ditulis.", vbInformation
End Sub


Function JoinDescriptions(desc1 As String, desc2 As String) As String
    If desc1 <> "" And desc2 <> "" Then
        JoinDescriptions = desc1 & ", " & desc2
    ElseIf desc1 <> "" Then
        JoinDescriptions = desc1
    Else
        JoinDescriptions = desc2
    End If
End Function

Function JoinDictionaryKeys(dict As Object) As String
    Dim key As Variant, result As String
    For Each key In dict.Keys
        result = result & IIf(result <> "", ", ", "") & key
    Next
    JoinDictionaryKeys = result
End Function


