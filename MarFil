Sub GenerateMarsho()
    Dim filePath As String
    Dim targetDate As Date, targetDay As Integer
    Dim wsTarget As Worksheet
    Dim startRow As Long
    Dim wb As Workbook
    Dim ws As Worksheet
    Dim wsFill As Worksheet


    ' Tentukan tanggal proses (kemarin)
    targetDate = Date
    targetDay = Day(targetDate)
    
    ' Ambil file dari email hari ini
    filePath = GetAttachment_BIO(targetDate)
    If filePath = "" Then
        MsgBox "File BIO tidak ditemukan dari email hari ini.", vbExclamation
        Exit Sub
    End If
    
    ' Pastikan sheet output ada
    On Error Resume Next
    Set wsTarget = ThisWorkbook.Sheets(Format(targetDate, "dd"))
    If wsTarget Is Nothing Then
        Set wsTarget = ThisWorkbook.Sheets.Add(After:=ThisWorkbook.Sheets(ThisWorkbook.Sheets.Count))
        wsTarget.Name = Format(targetDate, "dd")
    End If
    On Error GoTo 0
    
    ' Bersihkan area lama
    wsTarget.Cells.Clear
    
    ' Baris mulai output
    startRow = 1
    
    ' --- Buka workbook sumber ---
    Set wb = Workbooks.Open(filePath)
    
    ' --- Jalankan Marsho ---
    On Error Resume Next
    Set ws = wb.Sheets("Marunda-Marsho")
    On Error GoTo 0
    If Not ws Is Nothing Then
        GenerateMarshoPlantReport ws, wsTarget, targetDate, startRow
    Else
        wsTarget.Cells(startRow, 1).Value = "Sheet 'Marunda-Marsho' tidak ditemukan."
        startRow = startRow + 2
    End If
    
    ' --- Jalankan Filling ---
    On Error Resume Next
    Set wsFill = wb.Sheets("Marunda-Oil")
    On Error GoTo 0
    If Not wsFill Is Nothing Then
        GenerateFillingPlantReport wsFill, wsTarget, targetDate, startRow
    Else
        wsTarget.Cells(startRow, 1).Value = "Sheet 'Marunda-Oil' tidak ditemukan."
        startRow = startRow + 2
    End If
    
    ' Tutup workbook sumber
    wb.Close False

    MsgBox "? Laporan aktual planning untuk tanggal " & Format(targetDate, "dd MMM yyyy") & " berhasil dibuat!", vbInformation
End Sub


Sub GenerateFillingPlantReport(ws As Worksheet, wsTarget As Worksheet, targetDate As Date, ByRef row As Long)
    Dim col As Long, lastCol As Long
    Dim dataCol As Long
    Dim found As Boolean
    Dim targetText As String
    Dim planValue As Variant, actualValue As Variant, perfValue As Variant
    Dim curRow As Long, lastRow As Long
    Dim machineName As String
    Dim validMachines As Variant, m As Variant
    Dim cellVal As String
    Dim cellComment As String
    
    ' --- tambahan variabel untuk running, total, dan tracking eff terendah ---
    Dim runningCount As Long, totalMachines As Long
    Dim totalPlan As Double, totalActual As Double
    Dim minPerf As Double, minMachine As String, minComment As String
    
    ' --- daftar mesin Filling Plant ---
    validMachines = Array("Thimonier 1", "Thimonier 2", "Thimonier 3", "Thimonier 5 (ASRS)", _
                          "Thimonier 7", "Thimonier 9", "Thimonier 10", "Emec - 2L -5L", _
                          "Emec - 18L (16 Nozzle)", "Emec -  BIB 18 L (I)", "Emec -  BIB 18 L (II)", _
                          "Emec -  BIB 18 L (III)", "SERAC")
    totalMachines = UBound(validMachines) - LBound(validMachines) + 1
    
    minPerf = 999999
    
    ' --- format tanggal target ---
    targetText = Format(targetDate, "d - mmm")
    
    ' --- cari kolom tanggal di baris 5 ---
    lastCol = ws.Cells(5, ws.Columns.Count).End(xlToLeft).Column
    found = False
    For col = 1 To lastCol
        If Trim(ws.Cells(5, col).Text) = targetText Then
            dataCol = col
            found = True
            Exit For
        End If
    Next col
    
    If Not found Then
        wsTarget.Cells(row, 1).Value = "Filling Plant - Tanggal tidak ditemukan (" & targetText & ")"
        row = row + 2
        Exit Sub
    End If
    
    ' --- judul & header ---
    wsTarget.Cells(row, 1).Value = "Filling Plant (" & targetText & ")"
    row = row + 1
    wsTarget.Cells(row, 1).Value = "Mesin"
    wsTarget.Cells(row, 2).Value = "Plan"
    wsTarget.Cells(row, 3).Value = "Actual"
    wsTarget.Cells(row, 4).Value = "Performance (%)"
    wsTarget.Cells(row, 5).Value = "Comment"
    row = row + 1
    
    machineName = ""
    curRow = 6
    lastRow = ws.Cells(ws.Rows.Count, 1).End(xlUp).row
    
    ' --- loop baris sampai akhir sheet ---
    Do While curRow <= lastRow
        cellVal = Trim(ws.Cells(curRow, 1).MergeArea.Cells(1, 1).Text)
        
        ' cek apakah baris ini nama mesin valid
        For Each m In validMachines
            If StrComp(cellVal, m, vbTextCompare) = 0 Then
                machineName = m
                Exit For
            End If
        Next m
        
        ' kalau baris ini adalah "IN TONASE" dan ada mesin aktif
        If Trim(UCase(cellVal)) = "IN TONASE" And machineName <> "" Then
            planValue = RoundNormal(CDbl(ws.Cells(curRow, dataCol).Value), 2)
            actualValue = RoundNormal(CDbl(ws.Cells(curRow, dataCol + 1).Value), 2)
            
            ' hitung performance
            If planValue <> 0 Then
                perfValue = Round((actualValue / planValue) * 100, 2)
            Else
                perfValue = 0
            End If
            
            ' --- ambil comment ---
            cellComment = ""
            Dim r As Long
            If perfValue <= 100 Then
                r = curRow - 1
                Do While r > 1
                    If StrComp(Trim(ws.Cells(r, 1).MergeArea.Cells(1, 1).Text), machineName, vbTextCompare) = 0 Then
                        Exit Do
                    End If
                    If Not ws.Cells(r, dataCol + 1).Comment Is Nothing Then
                        Dim fullComment As String, words() As String
                        fullComment = Trim(ws.Cells(r, dataCol + 1).Comment.Text)
                        words = Split(fullComment, " ")
                        If UBound(words) <= 2 Then
                            If cellComment <> "" Then cellComment = cellComment & "; "
                            cellComment = cellComment & fullComment
                        End If
                    End If
                    r = r - 1
                Loop
            End If
            
            ' tulis hasil ke target sheet
            wsTarget.Cells(row, 1).Value = machineName
            wsTarget.Cells(row, 2).Value = planValue
            wsTarget.Cells(row, 3).Value = actualValue
            wsTarget.Cells(row, 4).Value = perfValue
            wsTarget.Cells(row, 4).NumberFormat = "0.00""%"""
            wsTarget.Cells(row, 5).Value = cellComment
            
            ' hitung running dan total
            If actualValue > 0 Then runningCount = runningCount + 1
            totalPlan = totalPlan + planValue
            totalActual = totalActual + actualValue
            
            ' cek perf minimum
            If perfValue > 0 And perfValue < minPerf Then
                minPerf = perfValue
                minMachine = machineName
                minComment = cellComment
            End If
            
            row = row + 1
            machineName = ""
        End If
        
        curRow = curRow + 1
    Loop
    
    row = row + 1
    
    ' --- summary ---
    wsTarget.Cells(row, 1).Value = "Filling Plant"
    row = row + 1
    wsTarget.Cells(row, 1).Value = "Running " & runningCount & " dari " & totalMachines & " mesin"
    row = row + 1
    wsTarget.Cells(row, 1).Value = "Plan vs Actual = " & _
                                   Format(Round(totalPlan, 0), "0") & " / " & _
                                   Format(Round(totalActual, 0), "0") & " Ton"
    row = row + 1
    
    If minPerf < 999999 Then
        wsTarget.Cells(row, 1).Value = "eff " & minMachine & ", " & _
                                       Format(minPerf, "0.00") & "%, " & minComment
        row = row + 2
    Else
        row = row + 2
    End If
End Sub


Sub GenerateMarshoPlantReport(ws As Worksheet, wsTarget As Worksheet, targetDate As Date, ByRef row As Long)
    Dim col As Long, lastCol As Long
    Dim dataCol As Long
    Dim found As Boolean
    Dim targetText As String
    Dim planValue As Variant, actualValue As Variant, perfValue As Variant
    Dim curRow As Long, lastRow As Long
    Dim machineName As String
    Dim validMachines As Variant, m As Variant
    Dim cellVal As String
    Dim cellComment As String
    
    ' --- tambahan variabel untuk running, total, dan tracking eff terendah ---
    Dim runningCount As Long, totalMachines As Long
    Dim totalPlan As Double, totalActual As Double
    Dim minPerf As Double, minMachine As String, minComment As String
    
    ' --- daftar mesin yang diambil ---
    validMachines = Array("UGS I", "Chemtech", "Chemtech 2", "UGS 6", "UGS II", "UGS III", "UGS V")
    totalMachines = UBound(validMachines) - LBound(validMachines) + 1
    
    minPerf = 999999    ' nilai awal besar supaya bisa dibanding
    
    ' --- format tanggal target ---
    targetText = Format(targetDate, "d - mmm")
    
    ' --- cari kolom tanggal di baris 5 ---
    lastCol = ws.Cells(5, ws.Columns.Count).End(xlToLeft).Column
    found = False
    For col = 1 To lastCol
        If Trim(ws.Cells(5, col).Text) = targetText Then
            dataCol = col
            found = True
            Exit For
        End If
    Next col
    
    If Not found Then
        wsTarget.Cells(row, 1).Value = "Marsho Plant - Tanggal tidak ditemukan (" & targetText & ")"
        row = row + 2
        Exit Sub
    End If
    
    ' --- judul & header ---
    wsTarget.Cells(row, 1).Value = "Marsho Plant (" & targetText & ")"
    row = row + 1
    wsTarget.Cells(row, 1).Value = "Mesin"
    wsTarget.Cells(row, 2).Value = "Plan"
    wsTarget.Cells(row, 3).Value = "Actual"
    wsTarget.Cells(row, 4).Value = "Performance (%)"
    wsTarget.Cells(row, 5).Value = "Comment"
    row = row + 1
    
    machineName = ""
    curRow = 6
    lastRow = ws.Cells(ws.Rows.Count, 1).End(xlUp).row
    
    ' --- loop baris sampai akhir sheet ---
    Do While curRow <= lastRow
        cellVal = Trim(ws.Cells(curRow, 1).MergeArea.Cells(1, 1).Text)
        
        ' kalau baris ini adalah nama mesin valid
        For Each m In validMachines
            If StrComp(cellVal, m, vbTextCompare) = 0 Then
                machineName = m
                Exit For
            End If
        Next m

        ' kalau baris ini adalah "IN TONASE" dan ada mesin aktif
        If Trim(UCase(cellVal)) = "IN TONASE" And machineName <> "" Then
            planValue = RoundNormal(CDbl(ws.Cells(curRow, dataCol).Value), 2)
            actualValue = RoundNormal(CDbl(ws.Cells(curRow, dataCol + 1).Value), 2)
            
            ' hitung performance (%)
            If planValue <> 0 Then
                perfValue = Round((actualValue / planValue) * 100, 2)
            Else
                perfValue = 0
            End If
            
            ' --- ambil comment dari baris produk (di antara nama mesin dan IN TONASE) ---
            cellComment = ""
            Dim r As Long
            If perfValue <= 100 Then
                r = curRow - 1
                Do While r > 1
                    If StrComp(Trim(ws.Cells(r, 1).MergeArea.Cells(1, 1).Text), machineName, vbTextCompare) = 0 Then
                        Exit Do
                    End If
                    If Not ws.Cells(r, dataCol + 1).Comment Is Nothing Then
                        Dim fullComment As String, words() As String
                        fullComment = Trim(ws.Cells(r, dataCol + 1).Comment.Text)
                        words = Split(fullComment, " ")
                        If UBound(words) <= 2 Then   ' max 3 kata
                            If cellComment <> "" Then cellComment = cellComment & "; "
                            cellComment = cellComment & fullComment
                        End If
                    End If
                    r = r - 1
                Loop
            End If
            
            ' tulis ke target
            wsTarget.Cells(row, 1).Value = machineName
            wsTarget.Cells(row, 2).Value = planValue
            wsTarget.Cells(row, 3).Value = actualValue
            wsTarget.Cells(row, 4).Value = perfValue
            wsTarget.Cells(row, 4).NumberFormat = "0.00""%"""
            wsTarget.Cells(row, 5).Value = cellComment
            
            ' hitung running dan total
            If actualValue > 0 Then runningCount = runningCount + 1
            totalPlan = totalPlan + planValue
            totalActual = totalActual + actualValue
            
            ' --- cek minimum perf (exclude 0) ---
            If perfValue > 0 And perfValue < minPerf Then
                minPerf = perfValue
                minMachine = machineName
                minComment = cellComment
            End If
            
            row = row + 1
            machineName = ""
        End If
        
        curRow = curRow + 1
    Loop
       row = row + 1
    
    ' --- summary running dan total ---
    wsTarget.Cells(row, 1).Value = "Marsho Plant"
    row = row + 1
    wsTarget.Cells(row, 1).Value = "Running " & runningCount & " dari " & totalMachines & " mesin"
    row = row + 1
    wsTarget.Cells(row, 1).Value = "Plan vs Actual = " & _
                                   Format(Round(totalPlan, 0), "0") & " / " & _
                                   Format(Round(totalActual, 0), "0") & " Ton"
    row = row + 1
    
    ' --- tampilkan eff terendah ---
    If minPerf < 999999 Then
        wsTarget.Cells(row, 1).Value = "eff " & minMachine & ", " & _
                                       Format(minPerf, "0.00") & "%, " & minComment
        row = row + 2
    Else
        row = row + 2
    End If
End Sub



Function RoundNormal(ByVal x As Double, Optional digits As Long = 0) As Double
    RoundNormal = Round(x, digits)
End Function



Function GetAttachment_BIO(targetDate As Date) As String
    Dim olApp As Object, olNs As Object, olFolder As Object
    Dim olItems As Object, olMail As Object, olAtmt As Object
    Dim baseName As String, savePath As String
    Dim i As Long
    
    baseName = "08. Actual vs Planning Agustus Marunda (2025) 1.xlsx"
    savePath = Environ("TEMP") & "\BIO_" & Format(Date, "yyyymmdd") & ".xlsx"
    
    Set olApp = CreateObject("Outlook.Application")
    Set olNs = olApp.GetNamespace("MAPI")
    Set olFolder = olNs.GetDefaultFolder(6)
    Set olItems = olFolder.Items
    olItems.Sort "[ReceivedTime]", True
    
    For i = 1 To olItems.Count
        Set olMail = olItems.Item(i)
        If olMail.Class = 43 Then
            If Int(olMail.ReceivedTime) >= targetDate And olMail.ReceivedTime < targetDate + 1 Then
                If InStr(1, olMail.senderName, "Jessica Silvera", vbTextCompare) > 0 Or _
                   InStr(1, olMail.senderName, "Wendy Fadillah Nugraha", vbTextCompare) > 0 Then
                    For Each olAtmt In olMail.Attachments
                        If olAtmt.fileName = baseName Then
                            olAtmt.SaveAsFile savePath
                            GetAttachment_BIO = savePath
                            Exit Function
                        End If
                    Next olAtmt
                End If
            End If
        End If
    Next i
    GetAttachment_BIO = ""
End Function


Function GetCellVal(ws As Worksheet, targetRow As Long, _
                    header1 As String, header2 As String, _
                    header3 As String, header4 As String, _
                    Optional headerRow1 As Long = 7, _
                    Optional headerRow2 As Long = 8, _
                    Optional headerRow3 As Long = 9, _
                    Optional headerRow4 As Long = 10) As Double

    Dim col As Long, lastCol As Long
    Dim val1 As String, val2 As String, val3 As String, val4 As String
    Dim h1 As String, h2 As String, h3 As String, h4 As String

    On Error GoTo ErrorHandler

    lastCol = ws.Cells(headerRow1, ws.Columns.Count).End(xlToLeft).Column

    h1 = LCase(Trim(header1))
    h2 = LCase(Trim(header2))
    h3 = LCase(Trim(header3))
    h4 = LCase(Trim(header4))

    For col = 1 To lastCol
        val1 = LCase(Trim(GetMergedHeaderValue(ws, headerRow1, col)))
        val2 = LCase(Trim(GetMergedHeaderValue(ws, headerRow2, col)))
        val3 = LCase(Trim(GetMergedHeaderValue(ws, headerRow3, col)))
        val4 = LCase(Trim(GetMergedHeaderValue(ws, headerRow4, col)))

        ' Khusus Crude Fame: baris 8 & 9 merge (anggap val2 kosong, hanya gunakan val3)
        If InStr(val1, "crude fame") > 0 And _
           InStr(val3, h3) > 0 And InStr(val4, h4) > 0 Then
            GetCellVal = CDbl(ws.Cells(targetRow, col).Value)
            Exit Function
        End If

        ' Umum: semua header cocok secara longgar
        If InStr(val1, h1) > 0 And InStr(val2, h2) > 0 And _
           InStr(val3, h3) > 0 And InStr(val4, h4) > 0 Then
            GetCellVal = CDbl(ws.Cells(targetRow, col).Value)
            Exit Function
        End If
    Next col

    GetCellVal = 0
    Exit Function

ErrorHandler:
    Debug.Print "Hasil GetCellVal: ERROR"
    GetCellVal = 0
End Function




Function GetMergedHeaderValue(ws As Worksheet, headerRow As Long, col As Long) As String
    Dim cell As Range
    Set cell = ws.Cells(headerRow, col)

    ' Jika sel kosong, cek apakah bagian dari merge
    If IsEmpty(cell.Value) And cell.MergeCells Then
        GetMergedHeaderValue = cell.MergeArea.Cells(1, 1).Value
    Else
        GetMergedHeaderValue = cell.Value
    End If
End Function




' Fungsi bantu untuk mengambil nilai header dengan mempertimbangkan merged cells
Function GetMergedHeader(ws As Worksheet, headerRow As Long, col As Long) As String
    Dim val As String
    val = Trim(ws.Cells(headerRow, col).Value)
    
    If val = "" Then
        ' Cari ke atas jika cell kosong karena merged
        Do While val = "" And headerRow > 1
            headerRow = headerRow - 1
            val = Trim(ws.Cells(headerRow, col).Value)
        Loop
    End If
    
    GetMergedHeader = val
End Function





Function GetTextVal(ws As Worksheet, targetRow As Long, ParamArray headers() As Variant) As String
    Dim headerRow1 As Long: headerRow1 = 8
    Dim headerRow2 As Long: headerRow2 = 9
    Dim col As Long
    Dim i As Long, j As Long
    Dim lastCol As Long: lastCol = ws.Cells(headerRow1, ws.Columns.Count).End(xlToLeft).Column

    For col = 1 To lastCol
        j = 0
        For i = LBound(headers) To UBound(headers)
            Dim headerText As String
            If j Mod 2 = 0 Then
                headerText = LCase(Trim(ws.Cells(headerRow1, col).Value))
            Else
                headerText = LCase(Trim(ws.Cells(headerRow2, col).Value))
            End If

            If InStr(1, headerText, LCase(headers(i)), vbTextCompare) > 0 Then
                j = j + 1
            Else
                Exit For
            End If
        Next i

        If j = UBound(headers) + 1 Then
            GetTextVal = Trim(ws.Cells(targetRow, col).Value)
            Exit Function
        End If
    Next col

    GetTextVal = "" ' Default jika tidak ketemu
End Function

' ==== Fungsi Cari Baris Tanggal ====
Function FindMatchingRows(ws As Worksheet, colDate As String, startRow As Long, targetDate As Date) As Collection
    Dim matchingRows As New Collection
    Dim lastRow As Long, i As Long
    Dim cell As Range, mergeVal As Variant
    
    lastRow = ws.Cells(ws.Rows.Count, colDate).End(xlUp).row
    
    For i = startRow To lastRow
        Set cell = ws.Cells(i, colDate)
        If cell.MergeCells Then
            mergeVal = cell.MergeArea.Cells(1, 1).Value
        Else
            mergeVal = cell.Value
        End If
        
        If IsDate(mergeVal) Then
            ' Bandingkan hanya tanggalnya (abaikan jam)
            If Int(CDate(mergeVal)) = targetDate Then
                matchingRows.Add i
            End If
        End If
    Next i
    
    Set FindMatchingRows = matchingRows
End Function

