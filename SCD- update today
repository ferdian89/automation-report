Function GetAttachment_SCDPlant_Ferry(Optional targetDate As Date) As String
    Dim olApp As Object, olNs As Object, olFolder As Object
    Dim olItems As Object, olMail As Object, olAtmt As Object
    Dim fileName As String, savePath As String

    fileName = "02.Daily Report SCD  Hydro Plant (HO) Agustus 2025.xlsx"
    savePath = Environ("TEMP") & "\" & fileName
    If targetDate = 0 Then targetDate = Date - 1 ' default: kemarin

    Set olApp = GetObject(, "Outlook.Application")
    Set olNs = olApp.GetNamespace("MAPI")
    Set olFolder = olNs.GetDefaultFolder(6) ' Inbox
    Set olItems = olFolder.Items
    olItems.Sort "ReceivedTime", True

    For Each olMail In olItems
        If TypeName(olMail) = "MailItem" Then
            If Int(olMail.ReceivedTime) = Date Then ' Email hari ini
                If InStr(1, olMail.SenderName, "Ferry Hermansyah Lubis", vbTextCompare) > 0 Then
                    For Each olAtmt In olMail.Attachments
                        If olAtmt.fileName = fileName Then
                            On Error Resume Next: Kill savePath: On Error GoTo 0
                            olAtmt.SaveAsFile savePath
                            GetAttachment_SCDPlant_Ferry = savePath
                            Exit Function
                        End If
                    Next
                End If
            End If
        End If
    Next

    GetAttachment_SCDPlant_Ferry = ""
End Function


Sub GetSCDPlant_OutputFinal()
    Dim tempFile As String
    Dim xlApp As Object, xlWb As Object, xlWs As Worksheet
    Dim wsDest As Worksheet
    Dim targetDate As Date, searchValueDate As Date
    Dim lastDataRow As Long, lastRow As Long
    Dim i As Long, maxCol As Long
    Dim inputCol As Long, prodCol As Long, descColBX As Long, descColCN As Long
    Dim foundProdCol As Boolean, foundInputCol As Boolean
    Dim inputProcessedTotal As Double
    Dim dictProducts As Object, dictDescriptions As Object
    Dim prod As String, desc1 As String, desc2 As String, descCombined As String, key As Variant
    Dim joinedProducts As String, joinedDescriptions As String

    Set dictProducts = CreateObject("Scripting.Dictionary")
    Set dictDescriptions = CreateObject("Scripting.Dictionary")
    Dim sheetName As String
    sheetName = Format(Date - 1, "dd-mm-yyyy")
    
    On Error Resume Next
    Set wsDest = ThisWorkbook.Sheets(sheetName)
    If wsDest Is Nothing Then
        Set wsDest = ThisWorkbook.Sheets.Add(After:=ThisWorkbook.Sheets(ThisWorkbook.Sheets.Count))
        wsDest.Name = sheetName
    End If
    On Error GoTo 0


    targetDate = Date - 1
    searchValueDate = targetDate

    tempFile = GetAttachment_SCDPlant_Ferry(targetDate)
    If tempFile = "" Then
        MsgBox "File tidak ditemukan.", vbExclamation
        Exit Sub
    End If

    Set xlApp = CreateObject("Excel.Application")
    Set xlWb = xlApp.Workbooks.Open(tempFile, ReadOnly:=True)
    xlApp.Visible = False

    For Each xlWs In xlWb.Sheets
        If LCase(xlWs.Name) Like "*scd*" Then
            lastDataRow = xlWs.Cells(xlWs.Rows.Count, 1).End(xlUp).row
            maxCol = xlWs.Cells(9, xlWs.Columns.Count).End(xlToLeft).Column
            descColBX = 76: descColCN = 92

            For i = 1 To maxCol
                If Trim(xlWs.Cells(9, i).MergeArea.Cells(1, 1).Value) = "Product" And _
                   Trim(xlWs.Cells(10, i).Value) = "Refined" Then
                    prodCol = i
                    foundProdCol = True
                End If
                If Trim(xlWs.Cells(9, i).MergeArea.Cells(1, 1).Value) = "Input Processed" And _
                   Trim(xlWs.Cells(10, i).Value) = "Kg" Then
                    inputCol = i
                    foundInputCol = True
                End If
            Next i

            If foundProdCol Or foundInputCol Then
                For i = 1 To lastDataRow
                    If IsDate(xlWs.Cells(i, 1).Value) Then
                        If DateValue(xlWs.Cells(i, 1).Value) = searchValueDate Then
                            If foundProdCol Then
                                prod = Trim(xlWs.Cells(i, prodCol).Value)
                                If prod <> "" And Not dictProducts.exists(prod) Then
                                    dictProducts.Add prod, True
                                End If
                            End If
                            If foundInputCol Then
                                If IsNumeric(xlWs.Cells(i, inputCol).Value) Then
                                    inputProcessedTotal = inputProcessedTotal + CDbl(xlWs.Cells(i, inputCol).Value)
                                End If
                            End If
                            desc1 = Trim(xlWs.Cells(i, descColBX).Value)
                            desc2 = Trim(xlWs.Cells(i, descColCN).Value)
                            descCombined = ""
                            If desc1 <> "" Then descCombined = desc1
                            If desc2 <> "" Then
                                If descCombined <> "" Then
                                    descCombined = descCombined & ", " & desc2
                                Else
                                    descCombined = desc2
                                End If
                            End If
                            If descCombined <> "" Then
                                If Not dictDescriptions.exists(descCombined) Then
                                    dictDescriptions.Add descCombined, True
                                End If
                            End If
                        End If
                    End If
                Next i
            End If
            Exit For
        End If
    Next xlWs

    xlWb.Close False
    xlApp.Quit
    Set xlApp = Nothing: Set xlWb = Nothing

    For Each key In dictProducts.Keys
        joinedProducts = joinedProducts & IIf(joinedProducts = "", "", ", ") & key
    Next key

    For Each key In dictDescriptions.Keys
        joinedDescriptions = joinedDescriptions & IIf(joinedDescriptions = "", "", ", ") & key
    Next key

    lastRow = wsDest.Cells(wsDest.Rows.Count, 1).End(xlUp).row + 2
    wsDest.Cells(lastRow, 1).Value = "SCD Plant"
    wsDest.Cells(lastRow + 1, 1).Value = "Running : " & IIf(joinedProducts <> "", joinedProducts, "-")
    If inputProcessedTotal > 0 Then
        wsDest.Cells(lastRow + 2, 1).Value = "Input Processed : " & Format(inputProcessedTotal / 1000, "0") & " Ton"
    Else
        wsDest.Cells(lastRow + 2, 1).Value = "Stop Plant"
        wsDest.Cells(lastRow + 3, 1).Value = "Fit to PPIC Planning"
    End If
    If joinedDescriptions <> "" Then
        Dim descRow As Long
        descRow = IIf(inputProcessedTotal > 0, lastRow + 3, lastRow + 4)
        wsDest.Cells(descRow, 1).Value = "Description : " & joinedDescriptions
    End If

    MsgBox "Output SCD berhasil ditulis.", vbInformation
End Sub

