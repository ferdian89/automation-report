Sub GetIEFATPlant_OutputFinal_Today()
    Dim tempFile As String
    Dim targetSender As String
    Dim searchDate As Date

    targetSender = "Ferry Hermansyah Lubis"
    searchDate = Date - 1 ' Gunakan hari kemarin

    tempFile = GetAttachmentFromEmail(targetSender, searchDate, "02.Daily Report SCD  Hydro Plant (HO) Agustus 2025.xlsx")
    
    If tempFile <> "" Then
        Call ProcessIEFATFromExcel(tempFile, searchDate, ThisWorkbook.ActiveSheet)
    Else
        MsgBox "Email atau lampiran untuk tanggal " & Format(searchDate, "dd-mmm-yyyy") & " tidak ditemukan.", vbExclamation
    End If
End Sub

Function GetAttachmentFromEmail(targetSender As String, targetDate As Date, fileNameContains As String) As String
    Dim olApp As Object, olNs As Object, olFolder As Object
    Dim olItems As Object, olMail As Object, olAtmt As Object
    Dim tempFile As String

    On Error Resume Next
    Set olApp = GetObject(, "Outlook.Application")
    If olApp Is Nothing Then
        MsgBox "Outlook tidak berjalan.", vbCritical
        Exit Function
    End If
    On Error GoTo 0

    Set olNs = olApp.GetNamespace("MAPI")
    Set olFolder = olNs.GetDefaultFolder(6) ' Inbox
    Set olItems = olFolder.Items
    olItems.Sort "ReceivedTime", True

    For Each olMail In olItems
        If TypeName(olMail) = "MailItem" Then
            If Int(olMail.ReceivedTime) = Int(targetDate) Then
                If InStr(1, olMail.senderName, targetSender, vbTextCompare) > 0 Then
                    For Each olAtmt In olMail.Attachments
                        If InStr(1, olAtmt.Filename, fileNameContains, vbTextCompare) > 0 Then
                            tempFile = Environ("TEMP") & "\" & olAtmt.Filename
                            On Error Resume Next: Kill tempFile: On Error GoTo 0
                            olAtmt.SaveAsFile tempFile
                            GetAttachmentFromEmail = tempFile
                            Exit Function
                        End If
                    Next
                End If
            End If
        End If
    Next

    GetAttachmentFromEmail = ""
End Function

Sub ProcessIEFATFromExcel(filePath As String, searchDate As Date, wsDest As Worksheet)
    Dim xlApp As Object, xlWb As Object, xlWs As Worksheet
    Dim dictProducts As Object, dictDescriptions As Object
    Dim prodCol As Long, inputCol As Long, descColAY As Long
    Dim foundProdCol As Boolean, foundInputCol As Boolean
    Dim prod As String, descText As String, joinedProducts As String, joinedDescriptions As String
    Dim inputProcessedTotal As Double
    Dim i As Long, lastDataRow As Long, maxCol As Long
    Dim key As Variant, lastRow As Long

    descColAY = 51 ' Kolom AY
    Set dictProducts = CreateObject("Scripting.Dictionary")
    Set dictDescriptions = CreateObject("Scripting.Dictionary")

    Set xlApp = CreateObject("Excel.Application")
    xlApp.Visible = False
    Set xlWb = xlApp.Workbooks.Open(filePath, ReadOnly:=True)

    For Each xlWs In xlWb.Sheets
        If LCase(xlWs.Name) Like "*ie-fat*" Then
            Debug.Print "Processing Sheet: " & xlWs.Name

            lastDataRow = xlWs.Cells(xlWs.Rows.Count, 1).End(xlUp).row
            maxCol = xlWs.Cells(6, xlWs.Columns.Count).End(xlToLeft).Column

            For i = 1 To maxCol
                If Trim(xlWs.Cells(6, i).MergeArea.Cells(1, 1).Value) = "Product" And _
                   LCase(Trim(xlWs.Cells(7, i).Value)) = "hydrogenated" Then
                    prodCol = i
                    foundProdCol = True
                    Debug.Print "Found Product column at: " & i
                End If

                If Trim(xlWs.Cells(6, i).MergeArea.Cells(1, 1).Value) = "Input processed" And _
                   LCase(Trim(xlWs.Cells(7, i).Value)) = "kg" Then
                    inputCol = i
                    foundInputCol = True
                    Debug.Print "Found Input Processed column at: " & i
                End If
            Next i

            If foundProdCol Or foundInputCol Then
                For i = 8 To lastDataRow
                    If IsDate(xlWs.Cells(i, 1).Value) Then
                        Dim cellDate As Date
                        cellDate = DateValue(xlWs.Cells(i, 1).Value)
                        Debug.Print "Row " & i & ", Date: " & Format(cellDate, "dd-mmm-yy")

                        If Format(cellDate, "dd-mmm-yy") = Format(searchDate, "dd-mmm-yy") Then
                            Debug.Print "===> Match with searchDate: " & Format(searchDate, "dd-mmm-yy")

                            If foundProdCol Then
                                prod = Trim(xlWs.Cells(i, prodCol).Value)
                                If prod <> "" And Not dictProducts.exists(prod) Then
                                    dictProducts.Add prod, True
                                    Debug.Print "Added Product: " & prod
                                End If
                            End If

                            If foundInputCol Then
                                If IsNumeric(xlWs.Cells(i, inputCol).Value) Then
                                    inputProcessedTotal = inputProcessedTotal + CDbl(xlWs.Cells(i, inputCol).Value)
                                    Debug.Print "Added Input Processed: " & xlWs.Cells(i, inputCol).Value
                                End If
                            End If

                            descText = Trim(xlWs.Cells(i, descColAY).Value2)
                            If descText <> "" And Not dictDescriptions.exists(descText) Then
                                dictDescriptions.Add descText, True
                                Debug.Print "Added Description: " & descText
                            End If
                        End If
                    End If
                Next i
            End If
            Exit For
        End If
    Next xlWs

    xlWb.Close False
    xlApp.Quit
    Set xlApp = Nothing: Set xlWb = Nothing

    ' Gabungkan hasil
    For Each key In dictProducts.Keys
        joinedProducts = joinedProducts & IIf(joinedProducts = "", "", ", ") & key
    Next key
    For Each key In dictDescriptions.Keys
        joinedDescriptions = joinedDescriptions & IIf(joinedDescriptions = "", "", ", ") & key
    Next key

    ' Tulis hasil ke worksheet
    lastRow = wsDest.Cells(wsDest.Rows.Count, 1).End(xlUp).row + 2
    wsDest.Cells(lastRow, 1).Value = "IE-FAT Plant"
    wsDest.Cells(lastRow + 1, 1).Value = "Running : " & IIf(joinedProducts <> "", joinedProducts, "-")
    If inputProcessedTotal > 0 Then
        wsDest.Cells(lastRow + 2, 1).Value = "Input Processed : " & Format(inputProcessedTotal / 1000, "0") & " Ton"
    Else
        wsDest.Cells(lastRow + 2, 1).Value = "Stop Plant"
        wsDest.Cells(lastRow + 3, 1).Value = "Fit to PPIC Planning"
    End If
    If joinedDescriptions <> "" Then
        wsDest.Cells(lastRow + IIf(inputProcessedTotal > 0, 3, 4), 1).Value = "Description : " & joinedDescriptions
    End If

    Debug.Print "===== Summary ====="
    Debug.Print "Total Input Processed (KG): " & inputProcessedTotal
    Debug.Print "Products: " & joinedProducts
    Debug.Print "Descriptions: " & joinedDescriptions
    Debug.Print "===================="
End Sub


