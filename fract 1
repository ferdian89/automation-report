Sub GenerateFractinationPTRReport()
    Dim filePath As String
    Dim sheetName As String
    Dim todayDay As Integer
    Dim wsTarget As Worksheet
    Dim currentRow As Long
    

    todayDay = Day(Date - 1)
    sheetName = CStr(todayDay)
    
    filePath = "Z:\Document Share (Marunda All)\Process Engineering\summary act vs budget\Refinery and Fractination Production Report Juli 2025  (HO) Flowmeter.xlsx"

    Application.ScreenUpdating = False
    Application.DisplayAlerts = False

    ' Cek / Buat sheet
    On Error Resume Next
    Set wsTarget = ThisWorkbook.Sheets(sheetName)
    If wsTarget Is Nothing Then
        Set wsTarget = ThisWorkbook.Sheets.Add(After:=Sheets(Sheets.Count))
        wsTarget.Name = sheetName
    Else
        wsTarget.Cells.Clear
    End If
    On Error GoTo 0

    currentRow = 1

    ' Generate laporan fraksinasi
    Call GenerateFractinationReport(filePath, "FRACT 1", wsTarget, currentRow, todayDay)

    Application.ScreenUpdating = True
    MsgBox "Laporan FRACTINATION berhasil dibuat di sheet '" & sheetName & "'", vbInformation
End Sub


Private Sub GenerateFractinationReport(ByVal filePath As String, ByVal sheetSource As String, ByRef wsTarget As Worksheet, ByRef row As Long, ByVal targetDay As Integer)
    Dim wb As Workbook, ws As Worksheet
    Dim i As Long, lastRow As Long
    Dim cell As Range, mergeVal As Variant
    Dim rbdpoKg As Double, oleinKg As Double, stearinKg As Double
    Dim steamVal As Variant, electVal As Variant, waterVal As Variant
    Dim matchingRows As Collection
    Dim r As Variant
    Dim firstMatchRow As Long
    Dim downtimeText As String

    On Error Resume Next
    Set wb = Workbooks.Open(filePath, ReadOnly:=True)
    If wb Is Nothing Then
        wsTarget.Cells(row, 1).value = "FRACTINATION PLANT 1 - Gagal membuka file": row = row + 2
        Exit Sub
    End If
    On Error GoTo 0

    Set ws = wb.Sheets(sheetSource)
    Set matchingRows = New Collection
    lastRow = ws.Cells(ws.Rows.Count, "A").End(xlUp).row

    For i = 10 To lastRow
        Set cell = ws.Cells(i, 1)
        If cell.MergeCells Then
            mergeVal = cell.MergeArea.Cells(1, 1).value
        Else
            mergeVal = cell.value
        End If
        If mergeVal = targetDay Then matchingRows.Add i
    Next i

    If matchingRows.Count = 0 Then
        wsTarget.Cells(row, 1).value = "FRACTINATION PLANT 1 - Tanggal " & targetDay & " tidak ditemukan": row = row + 2
        wb.Close False
        Exit Sub
    End If

    ' Ambil total dari semua baris yang cocok
    For Each r In matchingRows
        rbdpoKg = rbdpoKg + GetCellVal(ws, CLng(r), "rbdpo input", "kg", 8, 9)
        oleinKg = oleinKg + GetCellVal(ws, CLng(r), "rbdol output", "kg", 8, 9)
        stearinKg = stearinKg + GetCellVal(ws, CLng(r), "rbdst output", "kg", 8, 9)
    Next r

    ' Ambil nilai apa adanya dari baris pertama yang cocok
    firstMatchRow = CLng(matchingRows(1))
steamVal = GetTextVal(ws, firstMatchRow, "steam", "kg/mt", 8, 9)
electVal = GetTextVal(ws, firstMatchRow, "electricity", "kwh/mt", 8, 9)
waterVal = GetTextVal(ws, firstMatchRow, "water", "m3/mt", 8, 9)
downtimeText = GetTextVal(ws, firstMatchRow, "downtime", "keterangan", 8, 9)

    wb.Close False

    ' Output hasil
    With wsTarget
        .Cells(row, 1).value = "FRACTINATION PLANT 1": row = row + 1
        .Cells(row, 1).value = "Quantity": row = row + 1
        .Cells(row, 1).value = "RBDPO Process : " & Round(rbdpoKg / 1000, 0) & " MT": row = row + 1
        .Cells(row, 1).value = "Olein : " & Round(oleinKg / 1000, 0) & " MT (" & Format(oleinKg / rbdpoKg * 100, "0.00") & " %)": row = row + 1
        .Cells(row, 1).value = "Stearin : " & Round(stearinKg / 1000, 0) & " MT (" & Format(stearinKg / rbdpoKg * 100, "0.00") & " %)": row = row + 1
        .Cells(row, 1).value = "Steam : " & Format(steamVal, "0.00") & " kg/MT": row = row + 1
        .Cells(row, 1).value = "Elect : " & Format(electVal, "0.00") & " kwh/MT": row = row + 1
        .Cells(row, 1).value = "Water : " & Format(waterVal, "0.00") & " m3/MT RBDPO": row = row + 1
              If downtimeText <> "" Then
            .Cells(row, 1).value = downtimeText: row = row + 1
        End If
        row = row + 1
    End With
End Sub


Private Function GetCellVal(ws As Worksheet, row As Long, h1Text As String, h2Text As String, h1Row As Long, h2Row As Long) As Double
    Dim lastCol As Long, col As Long
    Dim h1 As String, h2 As String

    lastCol = ws.Cells(h1Row, ws.Columns.Count).End(xlToLeft).Column

    For col = 2 To lastCol
        h1 = LCase(Trim(ws.Cells(h1Row, col).MergeArea.Cells(1, 1).value))
        h2 = LCase(Trim(ws.Cells(h2Row, col).value))
        If h1 = LCase(h1Text) And h2 = LCase(h2Text) Then
            GetCellVal = val(ws.Cells(row, col).value)
            Exit Function
        End If
    Next col

    GetCellVal = 0
End Function

Private Function GetTextVal(ws As Worksheet, row As Long, h1Text As String, h2Text As String, h1Row As Long, h2Row As Long) As String
    Dim lastCol As Long, col As Long
    Dim h1 As String, h2 As String

    lastCol = ws.Cells(h1Row, ws.Columns.Count).End(xlToLeft).Column

    For col = 2 To lastCol
        h1 = LCase(Trim(ws.Cells(h1Row, col).MergeArea.Cells(1, 1).value))
        h2 = LCase(Trim(ws.Cells(h2Row, col).value))
        If h1 = LCase(h1Text) And h2 = LCase(h2Text) Then
            GetTextVal = Trim(ws.Cells(row, col).Text) ' .Text = tampilkan persis dari sheet
            Exit Function
        End If
    Next col

    GetTextVal = "-"
End Function
