
' Fungsi ambil file dari email Outlook berdasarkan nama pengirim & nama file
Function GetFileFromEmail(senderNames As Variant, fileName As String, saveFolder As String, targetDate As Date) As String
    Dim olApp As Object, olNs As Object, olFolder As Object
    Dim olItems As Object, olMail As Object, olAtmt As Object
    Dim senderName As Variant
    
    GetFileFromEmail = ""
    
    ' Buka Outlook
    On Error Resume Next
    Set olApp = GetObject(, "Outlook.Application")
    If olApp Is Nothing Then Set olApp = CreateObject("Outlook.Application")
    On Error GoTo 0
    If olApp Is Nothing Then Exit Function
    
    Set olNs = olApp.GetNamespace("MAPI")
    Set olFolder = olNs.GetDefaultFolder(6) ' Inbox
    Set olItems = olFolder.Items
    olItems.Sort "[ReceivedTime]", True
    
    For Each olMail In olItems
        If olMail.Class = 43 Then ' 43 = MailItem
            If Int(olMail.ReceivedTime) = targetDate Then
                For Each senderName In senderNames
                    If InStr(1, olMail.senderName, senderName, vbTextCompare) > 0 Then
                        For Each olAtmt In olMail.Attachments
                            If olAtmt.fileName = fileName Then
                                olAtmt.SaveAsFile saveFolder & fileName
                                GetFileFromEmail = saveFolder & fileName
                                Exit Function
                            End If
                        Next olAtmt
                    End If
                Next senderName
            End If
        End If
    Next olMail
End Function

Sub GenerateCombinedRefineryPTR()
    Dim refFilePath As String, ptrFilePath As String
    Dim refFileName As String, ptrFileName As String
    Dim refFound As Boolean, ptrFound As Boolean
    
    Dim saveFolder As String, sheetName As String
    Dim todayDay As Integer, todayDate As Date
    Dim currentRow As Long
    Dim wsTarget As Worksheet
    
    ' Persiapan variabel
    todayDate = Date
    todayDay = Day(Date - 1)
    sheetName = CStr(todayDay)
    saveFolder = Environ("TEMP") & "\"
    
    ' Nama file
    refFileName = "Refinery and Fractination Production Report Agustus 2025  (HO) Flowmeter.xlsx"
    ptrFileName = "Pre-Treatment Production Report Agustus 2025  (HO) Flowmeter.xlsx"
    
    ' Ambil file dari email
    refFilePath = GetFileFromEmail(Array("Nora Yohana Panjaitan", "Dhina Mutia"), refFileName, saveFolder, todayDate)
    refFound = (refFilePath <> "")
    
    ptrFilePath = GetFileFromEmail(Array("Hani Wulandari", "Wendy Fadillah Nugraha"), ptrFileName, saveFolder, todayDate)
    ptrFound = (ptrFilePath <> "")
    
    ' Hapus sheet jika sudah ada
    On Error Resume Next
    Set wsTarget = ThisWorkbook.Sheets(sheetName)
    If Not wsTarget Is Nothing Then
        Application.DisplayAlerts = False
        wsTarget.Delete
        Application.DisplayAlerts = True
    End If
    On Error GoTo 0
    
    ' Buat sheet baru
    Set wsTarget = ThisWorkbook.Sheets.Add(After:=Sheets(Sheets.count))
    wsTarget.Name = sheetName
    currentRow = 1
    
    Application.ScreenUpdating = False
    
    ' Proses Refinery
    If refFound Then
        Call GenerateRefReportPart(refFilePath, "Ref 1", "REFINERY PLANT 1", wsTarget, currentRow, todayDay)
        Call GenerateRefReportPart(refFilePath, "Ref 2", "REFINERY PLANT 2", wsTarget, currentRow, todayDay)
    Else
        wsTarget.Cells(currentRow, 1).Value = "File Refinery tidak ditemukan": currentRow = currentRow + 2
    End If
    
    ' Proses PTR
    If ptrFound Then
        Call GenerateRefReportPart(ptrFilePath, "PTR", "PRE-TREATMENT", wsTarget, currentRow, todayDay)
    Else
        wsTarget.Cells(currentRow, 1).Value = "File PTR tidak ditemukan": currentRow = currentRow + 2
    End If
    
    ' Proses Fractination
    If refFound Then
        Call GenerateFractinationReport(refFilePath, "FRACT 1", "FRACTINATION PLANT 1", wsTarget, currentRow, todayDay)
        Call GenerateFractinationReport(refFilePath, "FRACT 2", "FRACTINATION PLANT 2", wsTarget, currentRow, todayDay)
    End If
    
    Application.ScreenUpdating = True
    
    MsgBox "Laporan gabungan selesai dibuat di sheet: " & wsTarget.Name, vbInformation
End Sub

' ------------------ REFINERY & PTR ------------------
Sub GenerateRefReportPart(filePath As String, sheetSource As String, plantLabel As String, wsTarget As Worksheet, row As Long, targetDay As Integer)
    Dim wb As Workbook, ws As Worksheet
    Dim lastRow As Long, i As Long
    Dim matchingRows As Collection
    Dim cell As Range, mergeVal As Variant
    Dim totalCPOKg As Double, totalRBDPOKg As Double, totalPFADKg As Double
    Dim weightedSteam As Double, weightedElectricity As Double
    Dim weightedBE As Double, weightedPA As Double
    Dim weightedCPOFFA As Double, weightedRBDPOFFA As Double
    Dim weightedRBDPOCol As Double, weightedPFADPurity As Double
    Dim rowCPO As Double
    Dim downtimeText As String
    Dim r As Variant

    Set wb = Workbooks.Open(filePath, ReadOnly:=True)
    Set ws = wb.Sheets(sheetSource)


    lastRow = ws.Cells(ws.Rows.count, "A").End(xlUp).row
    

    Set matchingRows = New Collection
    
    Dim isEndOfMonth As Boolean
    
    Dim isStartOfMonth As Boolean
    
    Set matchingRows = New Collection
    
    isEndOfMonth = (Day(Date) = Day(DateSerial(Year(Date), Month(Date) + 1, 0)))
    isStartOfMonth = (Day(Date) = 1)
    
    For i = 10 To lastRow
        If ws.Cells(i, 1).MergeCells Then
            mergeVal = ws.Cells(i, 1).MergeArea.Cells(1, 1).Value
        Else
            mergeVal = ws.Cells(i, 1).Value
        End If
    
        If mergeVal = targetDay Then
            If isEndOfMonth Then
                If i >= 150 Then
                    Debug.Print "? Akhir bulan, ambil baris >=150: " & i
                    matchingRows.Add i
                Else
                    Debug.Print "? Akhir bulan, skip baris <150: " & i
                End If
            Else
                Debug.Print "? Tengah bulan, ambil semua baris: " & i
                matchingRows.Add i
            End If
        End If
    Next i
' Debugging: Tampilkan baris yang cocok di Immediate Window
For Each r In matchingRows
    Debug.Print "Matching baris: " & r
Next r

    If matchingRows.count = 0 Then
        wsTarget.Cells(row, 1).Value = plantLabel & " - Tanggal tidak ditemukan": row = row + 2
        wb.Close False
        Exit Sub
    End If

    For Each r In matchingRows
        rowCPO = GetCellVal(ws, CLng(r), "input", "kg", 8, 9)
        totalCPOKg = totalCPOKg + rowCPO
        totalRBDPOKg = totalRBDPOKg + GetCellVal(ws, CLng(r), "rbd output", "kg", 8, 9)
        totalPFADKg = totalPFADKg + GetCellVal(ws, CLng(r), "pfad output", "kg", 8, 9)

        weightedSteam = weightedSteam + rowCPO * GetCellVal(ws, CLng(r), "steam", "kg/mt", 8, 9)
        weightedElectricity = weightedElectricity + rowCPO * GetCellVal(ws, CLng(r), "electricity", "kwh/mt", 8, 9)
        weightedBE = weightedBE + rowCPO * GetCellVal(ws, CLng(r), "bleaching earth", "%", 8, 9)
        weightedPA = weightedPA + rowCPO * GetCellVal(ws, CLng(r), "phosphoric acid", "%", 8, 9)
        weightedCPOFFA = weightedCPOFFA + rowCPO * GetCellVal(ws, CLng(r), "input", "ffa", 8, 9)
        weightedRBDPOFFA = weightedRBDPOFFA + rowCPO * GetCellVal(ws, CLng(r), "rbd output", "%ffa", 8, 9)
        weightedRBDPOCol = weightedRBDPOCol + rowCPO * GetCellVal(ws, CLng(r), "rbd output", "col", 8, 9)
        weightedPFADPurity = weightedPFADPurity + rowCPO * GetCellVal(ws, CLng(r), "pfad output", "%ffa", 8, 9)

        Dim currentDT As String
        currentDT = GetTextVal(ws, CLng(r), "downtime", "keterangan", 8, 9)
        If Trim(currentDT) <> "" Then
            downtimeText = downtimeText & vbCrLf & currentDT
        End If
    Next r

    wb.Close False

    Dim cpoMT As Long, rbdpoMT As Long, pfadMT As Long
    Dim rbdpoPct As Double, pfadPct As Double

    cpoMT = Round(totalCPOKg / 1000)
    rbdpoMT = Round(totalRBDPOKg / 1000)
    pfadMT = Round(totalPFADKg / 1000)

    If totalCPOKg > 0 Then
        rbdpoPct = totalRBDPOKg / totalCPOKg * 100
        pfadPct = totalPFADKg / totalCPOKg * 100
    End If

    With wsTarget
        .Cells(row, 1).Value = plantLabel: row = row + 1
        .Cells(row, 1).Value = "Quantity": row = row + 1
        .Cells(row, 1).Value = "CPO process : " & cpoMT & " MT": row = row + 1
        .Cells(row, 1).Value = "RBDPO : " & rbdpoMT & " MT (" & Format(rbdpoPct, "0.00") & " %)": row = row + 1
        .Cells(row, 1).Value = "PFAD : " & pfadMT & " MT (" & Format(pfadPct, "0.00") & " %)": row = row + 1
        .Cells(row, 1).Value = "Consumption": row = row + 1
        .Cells(row, 1).Value = "Steam : " & Round(weightedSteam / totalCPOKg, 0) & " kg/MT cpo": row = row + 1
        .Cells(row, 1).Value = "Elect : " & Round(weightedElectricity / totalCPOKg, 0) & " kWh/MT": row = row + 1
        .Cells(row, 1).Value = "BE : " & Format(weightedBE / totalCPOKg, "0.00") & " %": row = row + 1
        .Cells(row, 1).Value = "PA : " & Format(weightedPA / totalCPOKg, "0.00") & " %": row = row + 1
        .Cells(row, 1).Value = "Quality": row = row + 1
        .Cells(row, 1).Value = "CPO FFA : " & Format(weightedCPOFFA / totalCPOKg, "0.00") & " %": row = row + 1
        .Cells(row, 1).Value = "RBDPO FFA : " & Format(weightedRBDPOFFA / totalCPOKg, "0.00") & " %": row = row + 1
        .Cells(row, 1).Value = "Color RBDPO : " & Format(weightedRBDPOCol / totalCPOKg, "0.0"): row = row + 1
        .Cells(row, 1).Value = "PFAD purity : " & Format(weightedPFADPurity / totalCPOKg, "0.00") & " %": row = row + 1
    ' Gabungkan downtimeText dalam satu baris, tanpa label "Downtime:"
    If downtimeText <> "" Then
        Dim arr() As String: arr = Split(downtimeText, vbCrLf)
        Dim combinedText As String
        combinedText = ""

        For i = 0 To UBound(arr)
            Dim cleaned As String
            cleaned = Trim(arr(i))

            If cleaned <> "" And cleaned <> "0" And cleaned <> "- 0" Then
                If combinedText <> "" Then
                    combinedText = combinedText & ", " & cleaned
                Else
                    combinedText = cleaned
                End If
            End If
        Next i

        If combinedText <> "" Then
            .Cells(row, 1).Value = combinedText
            row = row + 1
        End If
    End If
        row = row + 1
    End With
        row = row + 1
End Sub

Sub GenerateFractinationReport(filePath As String, sheetSource As String, plantLabel As String, wsTarget As Worksheet, row As Long, targetDay As Integer)
    Dim wb As Workbook, ws As Worksheet
    Dim rbdpoKg As Double, oleinKg As Double, stearinKg As Double
    Dim weightedSteam As Double, weightedElectricity As Double, weightedWater As Double
    Dim downtimeText As String
    Dim i As Long, lastRow As Long
    Dim cell As Range, mergeVal As Variant
    Dim matchingRows As Collection, r As Variant

    Set wb = Workbooks.Open(filePath, ReadOnly:=True)
    Set ws = wb.Sheets(sheetSource)
    Set matchingRows = New Collection

    lastRow = ws.Cells(ws.Rows.count, "A").End(xlUp).row
Dim isEndOfMonth As Boolean
Dim isStartOfMonth As Boolean


isEndOfMonth = (Day(Date) = Day(DateSerial(Year(Date), Month(Date) + 1, 0)))
isStartOfMonth = (Day(Date) = 1)

For i = 10 To lastRow
    If ws.Cells(i, 1).MergeCells Then
        mergeVal = ws.Cells(i, 1).MergeArea.Cells(1, 1).Value
    Else
        mergeVal = ws.Cells(i, 1).Value
    End If

    If mergeVal = targetDay Then
        If isEndOfMonth Then
            If i >= 150 Then
                Debug.Print "? Akhir bulan, ambil baris >=150: " & i
                matchingRows.Add i
            Else
                Debug.Print "? Akhir bulan, skip baris <150: " & i
            End If
        Else
            Debug.Print "? Tengah bulan, ambil semua baris: " & i
            matchingRows.Add i
        End If
    End If
Next i


    If matchingRows.count = 0 Then
        wsTarget.Cells(row, 1).Value = plantLabel & " - Tanggal tidak ditemukan": row = row + 2
        wb.Close False
        Exit Sub
    End If

    ' Ambil data numerik utama dan kalkulasi tertimbang
    Dim allDowntimes As Collection
    Set allDowntimes = New Collection
    
    For Each r In matchingRows
        Dim inputRBDPO As Double
        inputRBDPO = GetCellVal(ws, CLng(r), "rbdpo input", "kg", 8, 9)
        rbdpoKg = rbdpoKg + inputRBDPO
        oleinKg = oleinKg + GetCellVal(ws, CLng(r), "rbdol output", "kg", 8, 9)
        stearinKg = stearinKg + GetCellVal(ws, CLng(r), "rbdst output", "kg", 8, 9)

        weightedSteam = weightedSteam + inputRBDPO * GetCellVal(ws, CLng(r), "steam", "kg/mt", 8, 9)
        weightedElectricity = weightedElectricity + inputRBDPO * GetCellVal(ws, CLng(r), "electricity", "kwh/mt", 8, 9)
        weightedWater = weightedWater + inputRBDPO * GetCellVal(ws, CLng(r), "water", "m3/mt", 8, 9)

    ' Ambil semua downtime yang valid
        Dim currentDowntime As String
        currentDowntime = GetTextVal(ws, CLng(r), "downtime", "keterangan", 8, 9)
        If currentDowntime <> "" Then
            On Error Resume Next ' untuk hindari duplikat
            allDowntimes.Add currentDowntime, CStr(currentDowntime)
            On Error GoTo 0
        End If
    Next r
    
        ' Gabungkan semua downtimeText jadi satu string
    downtimeText = ""
    If allDowntimes.count > 0 Then
        Dim dt As Variant
        For Each dt In allDowntimes
            downtimeText = downtimeText & "- " & dt & vbCrLf
        Next dt
    End If

    With wsTarget
        .Cells(row, 1).Value = plantLabel: row = row + 1
        .Cells(row, 1).Value = "Quantity": row = row + 1
        .Cells(row, 1).Value = "RBDPO Process : " & Round(rbdpoKg / 1000, 0) & " MT": row = row + 1
        .Cells(row, 1).Value = "Olein : " & Round(oleinKg / 1000, 0) & " MT (" & Format(oleinKg / rbdpoKg * 100, "0.00") & " %)": row = row + 1
        .Cells(row, 1).Value = "Stearin : " & Round(stearinKg / 1000, 0) & " MT (" & Format(stearinKg / rbdpoKg * 100, "0.00") & " %)": row = row + 1
    
        If rbdpoKg > 0 Then
            .Cells(row, 1).Value = "Steam : " & Format(weightedSteam / rbdpoKg, "0.00") & " kg/MT": row = row + 1
            .Cells(row, 1).Value = "Elect : " & Format(weightedElectricity / rbdpoKg, "0.00") & " kwh/MT": row = row + 1
            .Cells(row, 1).Value = "Water : " & Format(weightedWater / rbdpoKg, "0.00") & " m3/MT RBDPO": row = row + 1
        Else
            .Cells(row, 1).Value = "Steam : 0": row = row + 1
            .Cells(row, 1).Value = "Elect : 0": row = row + 1
            .Cells(row, 1).Value = "Water : 0": row = row + 1
        End If
    
    ' Gabungkan downtimeText dalam satu baris, tanpa label "Downtime:"
    If downtimeText <> "" Then
        Dim arr() As String: arr = Split(downtimeText, vbCrLf)
        Dim combinedText As String
        combinedText = ""

        For i = 0 To UBound(arr)
            Dim cleaned As String
            cleaned = Trim(arr(i))

            If cleaned <> "" And cleaned <> "0" And cleaned <> "- 0" Then
                If combinedText <> "" Then
                    combinedText = combinedText & ", " & cleaned
                Else
                    combinedText = cleaned
                End If
            End If
        Next i

        If combinedText <> "" Then
            .Cells(row, 1).Value = combinedText
            row = row + 1
        End If
    End If
    row = row + 1
    End With
    wb.Close SaveChanges:=False
End Sub


Function GetMatchingRowsByDate(ws As Worksheet, targetDate As Date) As Collection
    Dim i As Long, lastRow As Long
    Dim valDate As Variant, mergeVal As Variant
    Dim isEndOfMonth As Boolean, isStartOfMonth As Boolean
    Dim matches As New Collection

    lastRow = ws.Cells(ws.Rows.count, 1).End(xlUp).row
    isEndOfMonth = (Day(Date) = Day(DateSerial(Year(Date), Month(Date) + 1, 0)))
    isStartOfMonth = (Day(Date) = 1)

    For i = 10 To lastRow
        If ws.Cells(i, 1).MergeCells Then
            mergeVal = ws.Cells(i, 1).MergeArea.Cells(1, 1).Value
        Else
            mergeVal = ws.Cells(i, 1).Value
        End If

        If IsDate(mergeVal) Then
            valDate = DateValue(mergeVal)
            If valDate = targetDate Then
                If isEndOfMonth And i >= 150 Then
                    matches.Add i
                ElseIf Not isEndOfMonth Then
                    matches.Add i
                End If
            End If
        End If
    Next i

    Set GetMatchingRowsByDate = matches
End Function



' ------------------ UTIL ------------------
Function GetCellVal(ws As Worksheet, row As Long, h1Text As String, h2Text As String, h1Row As Long, h2Row As Long) As Double
    Dim lastCol As Long, col As Long, h1 As String, h2 As String
    lastCol = ws.Cells(h1Row, ws.Columns.count).End(xlToLeft).Column
    For col = 2 To lastCol
        h1 = LCase(Trim(ws.Cells(h1Row, col).MergeArea.Cells(1, 1).Value))
        h2 = LCase(Trim(ws.Cells(h2Row, col).Value))
        If h1 = LCase(h1Text) And h2 = LCase(h2Text) Then
            GetCellVal = ws.Cells(row, col).Value
            Exit Function
        End If
    Next col
    GetCellVal = 0
End Function

Function GetTextVal(ws As Worksheet, row As Long, h1Text As String, h2Text As String, h1Row As Long, h2Row As Long) As String
    Dim lastCol As Long, col As Long, h1 As String, h2 As String
    lastCol = ws.Cells(h1Row, ws.Columns.count).End(xlToLeft).Column
    For col = 2 To lastCol
        h1 = LCase(Trim(ws.Cells(h1Row, col).MergeArea.Cells(1, 1).Value))
        h2 = LCase(Trim(ws.Cells(h2Row, col).Value))
        If h1 = LCase(h1Text) And h2 = LCase(h2Text) Then
            GetTextVal = CStr(ws.Cells(row, col).Value)
            Exit Function
        End If
    Next col
    GetTextVal = ""
End Function











