Sub GenerateCombinedRefineryPTRReport()
    Dim refFilePath As String, ptrFilePath As String
    Dim refFileName As String, ptrFileName As String
    Dim saveFolder As String
    Dim sheetName As String
    Dim todayDay As Integer
    Dim todayDate As Date
    Dim currentRow As Long

    ' Outlook
    Dim olApp As Object, olNs As Object, olFolder As Object
    Dim olItems As Object, olMail As Object, olAtmt As Object

    ' Worksheet aktif
    Dim wsTarget As Worksheet

    ' Status file
    Dim refFound As Boolean, ptrFound As Boolean
    Dim i As Long

    ' Persiapan variabel
    todayDate = Date
    todayDay = Day(Date - 1)
    sheetName = CStr(todayDay)
    saveFolder = Environ("TEMP") & "\"

    refFileName = "Refinery and Fractination Production Report Juli 2025  (HO) Flowmeter.xlsx"
    ptrFileName = "Pre-Treatment Production Report Juli 2025  (HO) Flowmeter.xlsx"

    ' Ambil file dari email
    Set olApp = GetObject(, "Outlook.Application")
    Set olNs = olApp.GetNamespace("MAPI")
    Set olFolder = olNs.GetDefaultFolder(6) ' Inbox
    Set olItems = olFolder.Items
    olItems.Sort "[ReceivedTime]", True

    For i = 1 To olItems.Count
        Set olMail = olItems.Item(i)

        If olMail.Class = 43 Then
            If Int(olMail.ReceivedTime) = todayDate Then
                If InStr(1, olMail.SenderName, "Dhina Mutia", vbTextCompare) > 0 And Not refFound Then
                    For Each olAtmt In olMail.Attachments
                        If olAtmt.Filename = refFileName Then
                            olAtmt.SaveAsFile saveFolder & refFileName
                            refFilePath = saveFolder & refFileName
                            refFound = True
                            Exit For
                        End If
                    Next olAtmt
                End If

                If InStr(1, olMail.SenderName, "Hani Wulandari", vbTextCompare) > 0 And Not ptrFound Then
                    For Each olAtmt In olMail.Attachments
                        If olAtmt.Filename = ptrFileName Then
                            olAtmt.SaveAsFile saveFolder & ptrFileName
                            ptrFilePath = saveFolder & ptrFileName
                            ptrFound = True
                            Exit For
                        End If
                    Next olAtmt
                End If
            End If
        End If

        If refFound And ptrFound Then Exit For
    Next i

    ' Konfirmasi
    If refFound Then
        MsgBox "? File Refinery ditemukan: " & refFilePath, vbInformation
    Else
        MsgBox "? File Refinery dari Dhina Mutia hari ini tidak ditemukan!", vbExclamation
    End If

    If ptrFound Then
        MsgBox "? File PTR ditemukan: " & ptrFilePath, vbInformation
    Else
        MsgBox "? File PTR dari Hani Wulandari hari ini tidak ditemukan!", vbExclamation
    End If

    ' Jalankan laporan ke worksheet aktif
    Application.ScreenUpdating = False
    Application.DisplayAlerts = False

    Set wsTarget = ThisWorkbook.ActiveSheet
    wsTarget.Cells.Clear

    currentRow = 1
    Call GenerateRefReportPart(refFilePath, "Ref 1", "REFINERY PLANT 1", wsTarget, currentRow, todayDay)
    Call GenerateRefReportPart(refFilePath, "Ref 2", "REFINERY PLANT 2", wsTarget, currentRow, todayDay)
    Call GenerateRefReportPart(ptrFilePath, "PTR", "PRE-TREATMENT", wsTarget, currentRow, todayDay)
    Call GenerateFractinationReport(refFilePath, "FRACT 1", "FRACTINATION PLANT 1", wsTarget, currentRow, todayDay)
    Call GenerateFractinationReport(refFilePath, "FRACT 2", "FRACTINATION PLANT 2", wsTarget, currentRow, todayDay)

    Application.ScreenUpdating = True
    MsgBox "? Laporan gabungan berhasil dibuat di sheet aktif (" & wsTarget.Name & ")", vbInformation
End Sub


' ------------------ REFINERY & PTR ------------------
Sub GenerateRefReportPart(filePath As String, sheetSource As String, plantLabel As String, wsTarget As Worksheet, row As Long, targetDay As Integer)
    Dim wb As Workbook, ws As Worksheet
    Dim lastRow As Long, i As Long
    Dim matchingRows As Collection
    Dim cell As Range, mergeVal As Variant
    Dim totalCPOKg As Double, totalRBDPOKg As Double, totalPFADKg As Double
    Dim weightedSteam As Double, weightedElectricity As Double
    Dim weightedBE As Double, weightedPA As Double
    Dim weightedCPOFFA As Double, weightedRBDPOFFA As Double
    Dim weightedRBDPOCol As Double, weightedPFADPurity As Double
    Dim rowCPO As Double
    Dim downtimeText As String
    Dim r As Variant

    Set wb = Workbooks.Open(filePath, ReadOnly:=True)
    Set ws = wb.Sheets(sheetSource)

    Set matchingRows = New Collection
    lastRow = ws.Cells(ws.Rows.Count, "A").End(xlUp).row
    For i = 10 To lastRow
        Set cell = ws.Cells(i, 1)
        If cell.MergeCells Then
            mergeVal = cell.MergeArea.Cells(1, 1).Value
        Else
            mergeVal = cell.Value
        End If
        If mergeVal = targetDay Then matchingRows.Add i
    Next i

    If matchingRows.Count = 0 Then
        wsTarget.Cells(row, 1).Value = plantLabel & " - Tanggal tidak ditemukan": row = row + 2
        wb.Close False
        Exit Sub
    End If

    For Each r In matchingRows
        rowCPO = GetCellVal(ws, CLng(r), "input", "kg", 8, 9)
        totalCPOKg = totalCPOKg + rowCPO
        totalRBDPOKg = totalRBDPOKg + GetCellVal(ws, CLng(r), "rbd output", "kg", 8, 9)
        totalPFADKg = totalPFADKg + GetCellVal(ws, CLng(r), "pfad output", "kg", 8, 9)

        weightedSteam = weightedSteam + rowCPO * GetCellVal(ws, CLng(r), "steam", "kg/mt", 8, 9)
        weightedElectricity = weightedElectricity + rowCPO * GetCellVal(ws, CLng(r), "electricity", "kwh/mt", 8, 9)
        weightedBE = weightedBE + rowCPO * GetCellVal(ws, CLng(r), "bleaching earth", "%", 8, 9)
        weightedPA = weightedPA + rowCPO * GetCellVal(ws, CLng(r), "phosphoric acid", "%", 8, 9)
        weightedCPOFFA = weightedCPOFFA + rowCPO * GetCellVal(ws, CLng(r), "input", "ffa", 8, 9)
        weightedRBDPOFFA = weightedRBDPOFFA + rowCPO * GetCellVal(ws, CLng(r), "rbd output", "%ffa", 8, 9)
        weightedRBDPOCol = weightedRBDPOCol + rowCPO * GetCellVal(ws, CLng(r), "rbd output", "col", 8, 9)
        weightedPFADPurity = weightedPFADPurity + rowCPO * GetCellVal(ws, CLng(r), "pfad output", "%ffa", 8, 9)

        If downtimeText = "" Then
            downtimeText = GetTextVal(ws, CLng(r), "downtime", "keterangan", 8, 9)
        End If
    Next r

    wb.Close False

    Dim cpoMT As Long, rbdpoMT As Long, pfadMT As Long
    Dim rbdpoPct As Double, pfadPct As Double

    cpoMT = Round(totalCPOKg / 1000)
    rbdpoMT = Round(totalRBDPOKg / 1000)
    pfadMT = Round(totalPFADKg / 1000)

    If totalCPOKg > 0 Then
        rbdpoPct = totalRBDPOKg / totalCPOKg * 100
        pfadPct = totalPFADKg / totalCPOKg * 100
    End If

    With wsTarget
        .Cells(row, 1).Value = plantLabel: row = row + 1
        .Cells(row, 1).Value = "Quantity": row = row + 1
        .Cells(row, 1).Value = "CPO process : " & cpoMT & " MT": row = row + 1
        .Cells(row, 1).Value = "RBDPO : " & rbdpoMT & " MT (" & Format(rbdpoPct, "0.00") & " %)": row = row + 1
        .Cells(row, 1).Value = "PFAD : " & pfadMT & " MT (" & Format(pfadPct, "0.00") & " %)": row = row + 1
        .Cells(row, 1).Value = "Consumption": row = row + 1
        .Cells(row, 1).Value = "Steam : " & Round(weightedSteam / totalCPOKg, 0) & " kg/MT cpo": row = row + 1
        .Cells(row, 1).Value = "Elect : " & Round(weightedElectricity / totalCPOKg, 0) & " kWh/MT": row = row + 1
        .Cells(row, 1).Value = "BE : " & Format(weightedBE / totalCPOKg, "0.00") & " %": row = row + 1
        .Cells(row, 1).Value = "PA : " & Format(weightedPA / totalCPOKg, "0.00") & " %": row = row + 1
        .Cells(row, 1).Value = "Quality": row = row + 1
        .Cells(row, 1).Value = "CPO FFA : " & Format(weightedCPOFFA / totalCPOKg, "0.00") & " %": row = row + 1
        .Cells(row, 1).Value = "RBDPO FFA : " & Format(weightedRBDPOFFA / totalCPOKg, "0.00") & " %": row = row + 1
        .Cells(row, 1).Value = "Color RBDPO : " & Format(weightedRBDPOCol / totalCPOKg, "0.0"): row = row + 1
        .Cells(row, 1).Value = "PFAD purity : " & Format(weightedPFADPurity / totalCPOKg, "0.00") & " %": row = row + 1
        If downtimeText <> "" Then
            .Cells(row, 1).Value = downtimeText: row = row + 1
        End If
        row = row + 1
    End With
End Sub

' ------------------ FRACTINATION ------------------
Sub GenerateFractinationReport(filePath As String, sheetSource As String, plantLabel As String, wsTarget As Worksheet, row As Long, targetDay As Integer)
    Dim wb As Workbook, ws As Worksheet
    Dim rbdpoKg As Double, oleinKg As Double, stearinKg As Double
    Dim steamVal As Variant, electVal As Variant, waterVal As Variant, downtimeText As String
    Dim i As Long, lastRow As Long
    Dim cell As Range, mergeVal As Variant
    Dim matchingRows As Collection, r As Variant
    Dim firstMatchRow As Long

    Set wb = Workbooks.Open(filePath, ReadOnly:=True)
    Set ws = wb.Sheets(sheetSource)
    Set matchingRows = New Collection

    lastRow = ws.Cells(ws.Rows.Count, "A").End(xlUp).row
    For i = 10 To lastRow
        Set cell = ws.Cells(i, 1)
        If cell.MergeCells Then
            mergeVal = cell.MergeArea.Cells(1, 1).Value
        Else
            mergeVal = cell.Value
        End If
        If mergeVal = targetDay Then matchingRows.Add i
    Next i

    If matchingRows.Count = 0 Then
        wsTarget.Cells(row, 1).Value = plantLabel & " - Tanggal tidak ditemukan": row = row + 2
        wb.Close False
        Exit Sub
    End If

' Ambil data numerik utama
For Each r In matchingRows
    rbdpoKg = rbdpoKg + GetCellVal(ws, CLng(r), "rbdpo input", "kg", 8, 9)
    oleinKg = oleinKg + GetCellVal(ws, CLng(r), "rbdol output", "kg", 8, 9)
    stearinKg = stearinKg + GetCellVal(ws, CLng(r), "rbdst output", "kg", 8, 9)
    
    ' Ambil hanya satu kali teks downtime
    If downtimeText = "" Then
        downtimeText = GetTextVal(ws, CLng(r), "downtime", "keterangan", 8, 9)
    End If
Next r

' Ambil data steam, electricity, water dari baris terakhir
firstMatchRow = CLng(matchingRows(matchingRows.Count))
steamVal = GetCellVal(ws, firstMatchRow, "steam", "kg/mt", 8, 9)
electVal = GetCellVal(ws, firstMatchRow, "electricity", "kwh/mt", 8, 9)
waterVal = GetCellVal(ws, firstMatchRow, "water", "m3/mt", 8, 9)


    wb.Close False

    With wsTarget
        .Cells(row, 1).Value = plantLabel: row = row + 1
        .Cells(row, 1).Value = "Quantity": row = row + 1
        .Cells(row, 1).Value = "RBDPO Process : " & Round(rbdpoKg / 1000, 0) & " MT": row = row + 1
        .Cells(row, 1).Value = "Olein : " & Round(oleinKg / 1000, 0) & " MT (" & Format(oleinKg / rbdpoKg * 100, "0.00") & " %)": row = row + 1
        .Cells(row, 1).Value = "Stearin : " & Round(stearinKg / 1000, 0) & " MT (" & Format(stearinKg / rbdpoKg * 100, "0.00") & " %)": row = row + 1
        .Cells(row, 1).Value = "Steam : " & Format(steamVal, "0.00") & " kg/MT": row = row + 1
        .Cells(row, 1).Value = "Elect : " & Format(electVal, "0.00") & " kwh/MT": row = row + 1
        .Cells(row, 1).Value = "Water : " & Format(waterVal, "0.00") & " m3/MT RBDPO": row = row + 1
        If downtimeText <> "" Then
            .Cells(row, 1).Value = downtimeText: row = row + 1
        End If
        row = row + 1
    End With
End Sub

' ------------------ UTIL ------------------
Function GetCellVal(ws As Worksheet, row As Long, h1Text As String, h2Text As String, h1Row As Long, h2Row As Long) As Double
    Dim lastCol As Long, col As Long, h1 As String, h2 As String
    lastCol = ws.Cells(h1Row, ws.Columns.Count).End(xlToLeft).Column
    For col = 2 To lastCol
        h1 = LCase(Trim(ws.Cells(h1Row, col).MergeArea.Cells(1, 1).Value))
        h2 = LCase(Trim(ws.Cells(h2Row, col).Value))
        If h1 = LCase(h1Text) And h2 = LCase(h2Text) Then
            GetCellVal = ws.Cells(row, col).Value
            Exit Function
        End If
    Next col
    GetCellVal = 0
End Function

Function GetTextVal(ws As Worksheet, row As Long, h1Text As String, h2Text As String, h1Row As Long, h2Row As Long) As String
    Dim lastCol As Long, col As Long, h1 As String, h2 As String
    lastCol = ws.Cells(h1Row, ws.Columns.Count).End(xlToLeft).Column
    For col = 2 To lastCol
        h1 = LCase(Trim(ws.Cells(h1Row, col).MergeArea.Cells(1, 1).Value))
        h2 = LCase(Trim(ws.Cells(h2Row, col).Value))
        If h1 = LCase(h1Text) And h2 = LCase(h2Text) Then
            GetTextVal = CStr(ws.Cells(row, col).Value)
            Exit Function
        End If
    Next col
    GetTextVal = ""
End Function
