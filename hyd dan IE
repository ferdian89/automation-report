Sub GetIEFATPlant_OutputFinal()
    Dim tempFile As String
    Dim targetSender As String
    Dim emailDate As Date, processDate As Date

    targetSender = "Ferry Hermansyah Lubis"
    emailDate = Date                ' hari ini
    processDate = Date - 1          ' tanggal kemarin

    tempFile = GetAttachmentIEFAT(targetSender, emailDate)

    If tempFile <> "" Then
        ProcessIEFATExcel tempFile, processDate
    Else
        MsgBox "Email atau file tidak ditemukan.", vbExclamation
    End If
End Sub

Function GetAttachmentIEFAT(targetSender As String, targetDate As Date) As String
    Dim olApp As Object, olNs As Object, olFolder As Object
    Dim olItems As Object, olMail As Object, olAtmt As Object
    Dim tempFile As String

    Set olApp = GetObject(, "Outlook.Application")
    If olApp Is Nothing Then
        MsgBox "Outlook is not running.", vbCritical
        Exit Function
    End If

    Set olNs = olApp.GetNamespace("MAPI")
    Set olFolder = olNs.GetDefaultFolder(6) 'Inbox
    Set olItems = olFolder.Items
    olItems.Sort "ReceivedTime", True

    For Each olMail In olItems
        If TypeName(olMail) = "MailItem" Then
            If Int(olMail.ReceivedTime) = targetDate Then
                If InStr(1, olMail.senderName, targetSender, vbTextCompare) > 0 Then
                    If olMail.Attachments.Count > 0 Then
                        For Each olAtmt In olMail.Attachments
                            If InStr(1, olAtmt.fileName, "02.Daily Report SCD  Hydro Plant (HO) Agustus 2025.xlsx", vbTextCompare) > 0 Then
                                tempFile = Environ("TEMP") & "\" & olAtmt.fileName
                                On Error Resume Next: Kill tempFile: On Error GoTo 0
                                olAtmt.SaveAsFile tempFile
                                GetAttachmentIEFAT = tempFile
                                Exit Function
                            End If
                        Next
                    End If
                End If
            End If
        End If
    Next

    GetAttachmentIEFAT = ""
End Function


Sub ProcessIEFATExcel(tempFile As String, searchValueDate As Date)
    Dim xlApp As Object, xlWb As Object, xlWs As Worksheet
    Dim wsDest As Worksheet
    Dim lastRow As Long, lastDataRow As Long
    Dim i As Long, inputCol As Long, prodCol As Long, descCol As Long
    Dim foundInputCol As Boolean, foundProdCol As Boolean
    Dim inputProcessedTotal As Double, prod As String, descText As String
    Dim sheetLabel As String, headerRow1 As Long, headerRow2 As Long
    Dim dictProducts As Object, dictDescriptions As Object
    Dim joinedProducts As String, joinedDescriptions As String
    Dim maxCol As Long

    Set wsDest = ThisWorkbook.ActiveSheet

    Set xlApp = CreateObject("Excel.Application")
    xlApp.Visible = False
    Set xlWb = xlApp.Workbooks.Open(tempFile, ReadOnly:=True)

    For Each xlWs In xlWb.Sheets
        If LCase(xlWs.Name) Like "*ie-fat*" Or LCase(xlWs.Name) Like "*hydrogenation*" Then
            Set dictProducts = CreateObject("Scripting.Dictionary")
            Set dictDescriptions = CreateObject("Scripting.Dictionary")
            inputProcessedTotal = 0
            foundProdCol = False
            foundInputCol = False

            If LCase(xlWs.Name) Like "*ie-fat*" Then
                sheetLabel = "IE-FAT Plant"
                headerRow1 = 6: headerRow2 = 7: descCol = 48 ' AV
            Else
                sheetLabel = "Hydrogenation"
                headerRow1 = 9: headerRow2 = 10: descCol = 51 ' AY
            End If

            With xlWs
                lastDataRow = .Cells(.Rows.Count, 1).End(xlUp).row
                maxCol = .Cells(headerRow1, .Columns.Count).End(xlToLeft).Column

                For i = 1 To maxCol
                    If Trim(.Cells(headerRow1, i).MergeArea.Cells(1, 1).Value) = "Product" And _
                       LCase(Trim(.Cells(headerRow2, i).Value)) = "hydrogenated" Then
                        prodCol = i: foundProdCol = True
                    End If
                    If Trim(.Cells(headerRow1, i).MergeArea.Cells(1, 1).Value) = "Input processed" And _
                       LCase(Trim(.Cells(headerRow2, i).Value)) = "kg" Then
                        inputCol = i: foundInputCol = True
                    End If
                Next i

                For i = 1 To lastDataRow
                    If IsDate(.Cells(i, 1).Value) Then
                        If DateValue(.Cells(i, 1).Value) = searchValueDate Then
                            If foundProdCol Then
                                prod = Trim(.Cells(i, prodCol).Value)
                                If prod <> "" And Not dictProducts.exists(prod) Then
                                    dictProducts.Add prod, True
                                End If
                            End If
                            If foundInputCol Then
                                If IsNumeric(.Cells(i, inputCol).Value) Then
                                    inputProcessedTotal = inputProcessedTotal + CDbl(.Cells(i, inputCol).Value)
                                End If
                            End If
                            descText = Trim(.Cells(i, descCol).Value2)
                            If descText <> "" And Not dictDescriptions.exists(descText) Then
                                dictDescriptions.Add descText, True
                            End If
                        End If
                    End If
                Next i
            End With

            joinedProducts = JoinDictionaryKeys(dictProducts)
            joinedDescriptions = JoinDictionaryKeys(dictDescriptions)

            lastRow = wsDest.Cells(wsDest.Rows.Count, 1).End(xlUp).row + 2
            wsDest.Cells(lastRow, 1).Value = sheetLabel

            If inputProcessedTotal > 0 Then
                wsDest.Cells(lastRow + 1, 1).Value = "Running : " & IIf(joinedProducts <> "", joinedProducts, "-")
                wsDest.Cells(lastRow + 2, 1).Value = "Input Processed : " & Format(inputProcessedTotal / 1000, "0") & " Ton"
                If joinedDescriptions <> "" Then
                    wsDest.Cells(lastRow + 3, 1).Value = "Description : " & joinedDescriptions
                End If
            Else
                wsDest.Cells(lastRow + 1, 1).Value = "Stop plant / No Order fit planning PPIC"
            End If
        End If
    Next xlWs

    xlWb.Close False
    xlApp.Quit
    Set xlApp = Nothing: Set xlWb = Nothing

    MsgBox "Output IE-FAT dan Hydrogenation berhasil ditulis.", vbInformation
End Sub


Function JoinDictionaryKeys(dict As Object) As String
    Dim key As Variant, result As String
    For Each key In dict.Keys
        result = result & IIf(result <> "", ", ", "") & key
    Next
    JoinDictionaryKeys = result
End Function

