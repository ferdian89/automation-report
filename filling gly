Function GetAttachment_FillingGly(Optional targetDay As Date) As String
    Dim olApp As Object, olNs As Object, olFolder As Object
    Dim olItems As Object, olMail As Object, olAtmt As Object
    Dim fileName As String, savePath As String
    
    fileName = "Daily Report Production Filling Glycerin Plant August 2025.xlsx"
    savePath = Environ("TEMP") & "\" & fileName
    If targetDay = 0 Then targetDay = Date
    
    Debug.Print "=== LOG GetAttachment_FillingGly ==="
    Debug.Print "Target Date : " & Format(targetDay, "dd-mmm-yyyy")
    Debug.Print "Save Path   : " & savePath
    
    ' Pastikan Outlook aktif
    On Error Resume Next
    Set olApp = GetObject(, "Outlook.Application")
    On Error GoTo 0
    If olApp Is Nothing Then
        Debug.Print "ERROR: Outlook tidak terbuka!"
        Exit Function
    End If
    
    Set olNs = olApp.GetNamespace("MAPI")
    Set olFolder = olNs.GetDefaultFolder(6) ' Inbox
    Set olItems = olFolder.Items
    olItems.Sort "ReceivedTime", True
    
    For Each olMail In olItems
        If TypeName(olMail) = "MailItem" Then
            If Int(olMail.ReceivedTime) = Int(targetDay) Then
                Debug.Print "Cek Mail: " & olMail.SenderName & " | " & olMail.Subject
                
                If (InStr(1, olMail.SenderName, "Hani Wulandari", vbTextCompare) > 0) _
                Or (InStr(1, olMail.SenderName, "Wendy Fadillah Nugraha", vbTextCompare) > 0) Then
                    
                    Debug.Print ">> Email pengirim sesuai kriteria"
                    
                    For Each olAtmt In olMail.Attachments
                        Debug.Print "   - Attachment: " & olAtmt.fileName
                        
                        ' Pencocokan fleksibel nama file
                        If InStr(1, olAtmt.fileName, "Filling Glycerin", vbTextCompare) > 0 Then
                            Debug.Print ">> Cocok! Simpan ke: " & savePath
                            
                            ' Hapus file lama kalau ada
                            On Error Resume Next
                            Kill savePath
                            On Error GoTo 0
                            
                            ' Simpan attachment
                            olAtmt.SaveAsFile savePath
                            GetAttachment_FillingGly = savePath
                            
                            Debug.Print "SUCCESS: Attachment disimpan!"
                            Exit Function
                        End If
                    Next
                End If
            End If
        End If
    Next
    
    ' Kalau tidak ketemu
    Debug.Print "WARNING: Attachment tidak ditemukan."
    GetAttachment_FillingGly = ""
End Function


' ====================================================
' Sub Utama: GetFillingGlycerine (versi fix merge cell)
' ====================================================
Sub GetFillingGlycerine()
    On Error GoTo ErrHandler
    
    Dim tempFile As String
    Dim xlApp As Object, xlWb As Object, xlWs As Object
    Dim wsDest As Worksheet
    Dim targetDay As Date, searchValueDate As Date
    Dim sheetName As String
    Dim plantLabel As String
    Dim matchingRows As Collection
    Dim r As Variant
    Dim row As Long
    
    plantLabel = "Filling Glycerin Plant"
    
    ' ==== inisialisasi ====
    targetDay = Date - 1
    searchValueDate = targetDay
    sheetName = Format(searchValueDate, "dd")
    
    ' ==== ambil file lampiran ====
    tempFile = GetAttachment_FillingGly(searchValueDate)
    If tempFile = "" Then
        MsgBox "File Filling Glycerine tidak ditemukan.", vbExclamation
        Exit Sub
    End If
    
    ' ==== buka excel sumber ====
    Set xlApp = CreateObject("Excel.Application")
    xlApp.Visible = False
    Set xlWb = xlApp.Workbooks.Open(tempFile, ReadOnly:=True)
    
    ' ==== buat worksheet tujuan ====
    On Error Resume Next
    Set wsDest = ThisWorkbook.Sheets(sheetName)
    If wsDest Is Nothing Then
        Set wsDest = ThisWorkbook.Sheets.Add(After:=ThisWorkbook.Sheets(ThisWorkbook.Sheets.Count))
        wsDest.Name = sheetName
    End If
    On Error GoTo ErrHandler
    
    row = 1
    
 ' ==== loop setiap sheet sumber ====
For Each xlWs In xlWb.Sheets
    If InStr(1, LCase(xlWs.Name), "daily report", vbTextCompare) > 0 Then
        Debug.Print "Sheet ditemukan: " & xlWs.Name
        
        ' cari baris sesuai tanggal
        Set matchingRows = GetMatchingRowsByDate(xlWs, targetDay)
        Debug.Print "Tanggal dicari: " & targetDay & " | Jumlah baris cocok: " & matchingRows.Count
        
        ' === ambil setiap baris hasil ===
        For Each r In matchingRows
            Dim rawK As Variant, rawN As Variant
            Dim valK As Double, valN As Double, totalVal As Double
            
            ' baca nilai mentah
            rawK = xlWs.Cells(r, 11).Value   ' Kolom K = 11
            rawN = xlWs.Cells(r, 14).Value   ' Kolom N = 14
            
' validasi nilai K
If IsError(rawK) Or IsEmpty(rawK) Then
    valK = 0
ElseIf IsNumeric(rawK) Then
    valK = CDbl(rawK)
ElseIf VarType(rawK) = vbString Then
    If IsNumeric(Trim(rawK)) Then
        valK = CDbl(Trim(rawK))
    Else
        valK = 0
    End If
Else
    valK = 0
End If

' validasi nilai N
If IsError(rawN) Or IsEmpty(rawN) Then
    valN = 0
ElseIf IsNumeric(rawN) Then
    valN = CDbl(rawN)
ElseIf VarType(rawN) = vbString Then
    If IsNumeric(Trim(rawN)) Then
        valN = CDbl(Trim(rawN))
    Else
        valN = 0
    End If
Else
    valN = 0
End If

            
            ' skip kalau dua-duanya kosong/0
            If (valK = 0 And valN = 0) Then
                Debug.Print "Row source: " & r & " dilewati (kosong)"
            Else
                totalVal = valK * valN
                
                Debug.Print "Row source: " & r & _
                            " | Kolom K: " & valK & _
                            " | Kolom N: " & valN & _
                            " | Total (KxN): " & totalVal
                
                If totalVal > 0 Then
                    wsDest.Cells(row, 1).Value = "Glycerine HDPE Drum/IBC = " & Round(totalVal / 1000, 0) & " MT"
                    row = row + 1
                End If
            End If
        Next r
    End If
Next xlWs

    
    xlWb.Close False
    xlApp.Quit
    Set xlApp = Nothing
    MsgBox "GetFillingGlycerine selesai untuk " & Format(targetDay, "dd-mmm-yyyy")
    
    Exit Sub
    
ErrHandler:
    MsgBox "Error: " & Err.Description, vbCritical
    On Error Resume Next
    If Not xlWb Is Nothing Then xlWb.Close False
    If Not xlApp Is Nothing Then xlApp.Quit
End Sub


Function GetMatchingRowsByDate(ws As Worksheet, targetDate As Date) As Collection
        Dim i As Long, lastRow As Long
        Dim valDate As Variant, mergeVal As Variant
        Dim isEndOfMonth As Boolean, isStartOfMonth As Boolean
        Dim matches As New Collection
    
        lastRow = ws.Cells(ws.Rows.Count, 1).End(xlUp).row
        isEndOfMonth = (Day(Date) = Day(DateSerial(Year(Date), Month(Date) + 1, 0)))
        isStartOfMonth = (Day(Date) = 1)
    
        For i = 10 To lastRow
            If ws.Cells(i, 1).MergeCells Then
                mergeVal = ws.Cells(i, 1).MergeArea.Cells(1, 1).Value
            Else
                mergeVal = ws.Cells(i, 1).Value
            End If
    
            If IsDate(mergeVal) Then
                valDate = DateValue(mergeVal)
                If valDate = targetDate Then
                    If isEndOfMonth And i >= 150 Then
                        matches.Add i
                    ElseIf Not isEndOfMonth Then
                        matches.Add i
                    End If
                End If
            End If
        Next i
    
        Set GetMatchingRowsByDate = matches
    End Function
    


