Sub GenerateFractinationPTRReport()
    Dim filePath As String
    Dim sheetName As String
    Dim todayDay As Integer
    Dim wsTarget As Worksheet
    Dim currentRow As Long
    
    todayDay = Day(Date - 1)
    sheetName = CStr(todayDay)
    
    filePath = "Z:\Document Share (Marunda All)\Process Engineering\summary act vs budget\Refinery and Fractination Production Report Juli 2025  (HO) Flowmeter.xlsx"

    Application.ScreenUpdating = False
    Application.DisplayAlerts = False

    ' Cek / Buat sheet
    On Error Resume Next
    Set wsTarget = ThisWorkbook.Sheets(sheetName)
    If wsTarget Is Nothing Then
        Set wsTarget = ThisWorkbook.Sheets.Add(After:=Sheets(Sheets.Count))
        wsTarget.Name = sheetName
    Else
        wsTarget.Cells.Clear
    End If
    On Error GoTo 0

    currentRow = 1

    ' === FRACT 1 ===
    Call GenerateFractinationReport(filePath, "FRACT 1", "FRACTINATION PLANT 1", wsTarget, currentRow, todayDay)

    ' === FRACT 2 ===
    Call GenerateFractinationReport(filePath, "FRACT 2", "FRACTINATION PLANT 2", wsTarget, currentRow, todayDay)

    Application.ScreenUpdating = True
    MsgBox "Laporan FRACTINATION PLANT 1 & 2 berhasil dibuat di sheet '" & sheetName & "'", vbInformation
End Sub


Private Sub GenerateFractinationReport(ByVal filePath As String, ByVal sheetSource As String, ByVal plantLabel As String, ByRef wsTarget As Worksheet, ByRef row As Long, ByVal targetDay As Integer)
    Dim wb As Workbook, ws As Worksheet
    Dim i As Long, lastRow As Long
    Dim cell As Range, mergeVal As Variant
    Dim rbdpoKg As Double, oleinKg As Double, stearinKg As Double
    Dim steamVal As String, electVal As String, waterVal As String, downtimeText As String
    Dim matchingRows As Collection
    Dim r As Variant
    Dim rowIndex As Long
    Dim idx As Long

    On Error Resume Next
    Set wb = Workbooks.Open(filePath, ReadOnly:=True)
    If wb Is Nothing Then
        wsTarget.Cells(row, 1).Value = plantLabel & " - Gagal membuka file": row = row + 2
        Exit Sub
    End If
    On Error GoTo 0

    Set ws = wb.Sheets(sheetSource)
    Set matchingRows = New Collection
    lastRow = ws.Cells(ws.Rows.Count, "A").End(xlUp).row

    ' Temukan semua baris yang cocok dengan targetDay
    For i = 10 To lastRow
        Set cell = ws.Cells(i, 1)
        If cell.MergeCells Then
            mergeVal = cell.MergeArea.Cells(1, 1).Value
        Else
            mergeVal = cell.Value
        End If
        If mergeVal = targetDay Then matchingRows.Add i
    Next i

    If matchingRows.Count = 0 Then
        wsTarget.Cells(row, 1).Value = plantLabel & " - Tanggal " & targetDay & " tidak ditemukan": row = row + 2
        wb.Close False
        Exit Sub
    End If

    ' Akumulasi nilai numerik utama
    For Each r In matchingRows
        rowIndex = CLng(r)
        rbdpoKg = rbdpoKg + GetCellVal(ws, rowIndex, "rbdpo input", "kg", 8, 9)
        oleinKg = oleinKg + GetCellVal(ws, rowIndex, "rbdol output", "kg", 8, 9)
        stearinKg = stearinKg + GetCellVal(ws, rowIndex, "rbdst output", "kg", 8, 9)
    Next r

    ' Ambil nilai steam, electric, water, downtime dari baris terbawah yang valid
    For idx = matchingRows.Count To 1 Step -1
        rowIndex = CLng(matchingRows(idx))

        If steamVal = "" Or steamVal = "-" Then
            steamVal = GetTextVal(ws, rowIndex, "steam", "kg/mt", 8, 9)
        End If
        If electVal = "" Or electVal = "-" Then
            electVal = GetTextVal(ws, rowIndex, "electricity", "kwh/mt", 8, 9)
        End If
        If waterVal = "" Or waterVal = "-" Then
            waterVal = GetTextVal(ws, rowIndex, "water", "m3/mt", 8, 9)
        End If
        If downtimeText = "" Or downtimeText = "-" Then
            downtimeText = GetTextVal(ws, rowIndex, "downtime", "keterangan", 8, 9)
        End If

        If steamVal <> "" And steamVal <> "-" And _
           electVal <> "" And electVal <> "-" And _
           waterVal <> "" And waterVal <> "-" And _
           downtimeText <> "" And downtimeText <> "-" Then Exit For
    Next idx

    wb.Close False

    ' Output hasil
    With wsTarget
        .Cells(row, 1).Value = plantLabel: row = row + 1
        .Cells(row, 1).Value = "Quantity": row = row + 1
        .Cells(row, 1).Value = "RBDPO Process : " & Round(rbdpoKg / 1000, 0) & " MT": row = row + 1
        .Cells(row, 1).Value = "Olein : " & Round(oleinKg / 1000, 0) & " MT (" & Format(oleinKg / rbdpoKg * 100, "0.00") & " %)": row = row + 1
        .Cells(row, 1).Value = "Stearin : " & Round(stearinKg / 1000, 0) & " MT (" & Format(stearinKg / rbdpoKg * 100, "0.00") & " %)": row = row + 1
        .Cells(row, 1).Value = "Steam : " & steamVal & " kg/MT": row = row + 1
        .Cells(row, 1).Value = "Elect : " & electVal & " kwh/MT": row = row + 1
        .Cells(row, 1).Value = "Water : " & waterVal & " m3/MT RBDPO": row = row + 1
        If downtimeText <> "" And downtimeText <> "-" Then
            .Cells(row, 1).Value = downtimeText: row = row + 1
        End If
        row = row + 1
    End With
End Sub


Private Function GetCellVal(ws As Worksheet, row As Long, h1Text As String, h2Text As String, h1Row As Long, h2Row As Long) As Double
    Dim lastCol As Long, col As Long
    Dim h1 As String, h2 As String

    lastCol = ws.Cells(h1Row, ws.Columns.Count).End(xlToLeft).Column

    For col = 2 To lastCol
        h1 = LCase(Trim(ws.Cells(h1Row, col).MergeArea.Cells(1, 1).Value))
        h2 = LCase(Trim(ws.Cells(h2Row, col).Value))
        If h1 = LCase(h1Text) And h2 = LCase(h2Text) Then
            GetCellVal = Val(ws.Cells(row, col).Value)
            Exit Function
        End If
    Next col

    GetCellVal = 0
End Function


Private Function GetTextVal(ws As Worksheet, row As Long, h1Text As String, h2Text As String, h1Row As Long, h2Row As Long) As String
    Dim lastCol As Long, col As Long
    Dim h1 As String, h2 As String

    lastCol = ws.Cells(h1Row, ws.Columns.Count).End(xlToLeft).Column

    For col = 2 To lastCol
        h1 = LCase(Trim(ws.Cells(h1Row, col).MergeArea.Cells(1, 1).Value))
        h2 = LCase(Trim(ws.Cells(h2Row, col).Value))
        If h1 = LCase(h1Text) And h2 = LCase(h2Text) Then
            GetTextVal = Trim(ws.Cells(row, col).Text)
            Exit Function
        End If
    Next col

    GetTextVal = "-"
End Function


