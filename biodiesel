Sub GenerateCombinedBIOReport()
    Dim filePath As String
    Dim targetDate As Date, targetDay As Integer
    Dim wsTarget As Worksheet
    Dim startRow As Long

    ' Tentukan tanggal proses (kemarin)
    targetDate = Date - 1
    targetDay = Day(targetDate)
    
    ' Ambil file dari email hari ini
    filePath = GetAttachment_BIO(targetDate)
    If filePath = "" Then
        MsgBox "File BIO tidak ditemukan dari email hari ini.", vbExclamation
        Exit Sub
    End If
    
    ' Pastikan sheet output ada
    On Error Resume Next
    Set wsTarget = ThisWorkbook.Sheets(Format(targetDate, "dd"))
    If wsTarget Is Nothing Then
        Set wsTarget = ThisWorkbook.Sheets.Add(After:=ThisWorkbook.Sheets(ThisWorkbook.Sheets.Count))
        wsTarget.Name = Format(targetDate, "dd")
    End If
    On Error GoTo 0
    
    ' Bersihkan area lama
    wsTarget.Cells.Clear
    
    ' Baris mulai output
    startRow = 1
    
    ' Panggil untuk process BIO
    GenerateBIOReportPart filePath, "BIO", "BIODIESEL PLANT", wsTarget, startRow, targetDate
    
    MsgBox "? Laporan BIO untuk tanggal " & Format(targetDate, "dd MMM yyyy") & " berhasil dibuat!", vbInformation
End Sub


Function GetAttachment_BIO(targetDate As Date) As String
    Dim olApp As Object, olNs As Object, olFolder As Object
    Dim olItems As Object, olMail As Object, olAtmt As Object
    Dim baseName As String, savePath As String
    Dim i As Long
    
    baseName = "Daily Report Production Glycerin & Biodiesel Plant Based on Flowmeter August 2025.xlsx"
    savePath = Environ("TEMP") & "\BIO_" & Format(Date, "yyyymmdd") & ".xlsx"
    
    Set olApp = CreateObject("Outlook.Application")
    Set olNs = olApp.GetNamespace("MAPI")
    Set olFolder = olNs.GetDefaultFolder(6)
    Set olItems = olFolder.Items
    olItems.Sort "[ReceivedTime]", True
    
    For i = 1 To olItems.Count
        Set olMail = olItems.Item(i)
        If olMail.Class = 43 Then
            If Int(olMail.ReceivedTime) = Int(Date) Then
                If InStr(1, olMail.SenderName, "Hani Wulandari", vbTextCompare) > 0 Or _
                   InStr(1, olMail.SenderName, "Wendy Fadillah Nugraha", vbTextCompare) > 0 Then
                    For Each olAtmt In olMail.Attachments
                        If olAtmt.fileName = baseName Then
                            olAtmt.SaveAsFile savePath
                            GetAttachment_BIO = savePath
                            Exit Function
                        End If
                    Next olAtmt
                End If
            End If
        End If
    Next i
    GetAttachment_BIO = ""
End Function


Sub GenerateBIOReportPart(filePath As String, sheetSource As String, plantLabel As String, wsTarget As Worksheet, ByRef row As Long, targetDate As Date)
    Dim wb As Workbook, ws As Worksheet
    Dim matchingRows As Collection, r As Variant
    Dim lastRow As Long, i As Long
    Dim cell As Range, mergeVal As Variant
    Dim feedKg As Double, fameKg As Double
    Dim glyKgPerMT As Variant, fattyKgPerMT As Variant
    Dim methanolVal As Variant, smVal As Variant
    Dim steamVal As Variant, electVal As Variant
    Dim firstMatchRow As Long, dataRow As Long
    Dim val As Variant, tempVal As Variant

    Set wb = Workbooks.Open(filePath, ReadOnly:=True)
    Set ws = wb.Sheets(sheetSource)
    Set matchingRows = New Collection

    ' Cari semua baris yang cocok dengan tanggal
    lastRow = ws.Cells(ws.Rows.Count, "A").End(xlUp).row

    For i = 10 To lastRow
        Set cell = ws.Cells(i, 1)
        If cell.MergeCells Then
            mergeVal = cell.MergeArea.Cells(1, 1).Value
        Else
            mergeVal = cell.Value
        End If

        If IsDate(mergeVal) Then
            If CDate(mergeVal) = targetDate Then
                matchingRows.Add i
            End If
        End If
    Next i

    If matchingRows.Count = 0 Then
        wsTarget.Cells(row, 1).Value = plantLabel & " - Tanggal tidak ditemukan"
        row = row + 2
        wb.Close False
        Exit Sub
    End If

 ' Ambil baris pertama yang match tanggal untuk nilai awal
dataRow = CLng(matchingRows(1))

' Feed
tempVal = GetCellVal(ws, dataRow, "FEED", "Flow meter", "TOTAL", "Kg")
If IsNumeric(tempVal) Then
    feedKg = tempVal
Else
    feedKg = 0
End If

' Fame
tempVal = GetCellVal(ws, dataRow, "Crude Fame", "Flow Meter", "", "Kg")
If IsNumeric(tempVal) Then
    fameKg = tempVal
Else
    fameKg = 0
End If

' Crudegly per MT
tempVal = GetCellVal(ws, dataRow, "Crude Glycerine", "Flow meter", "", "Kg/Ton Feed")
If IsNumeric(tempVal) Then
    glyKgPerMT = tempVal
Else
    glyKgPerMT = 0
End If

' Fatty per MT
tempVal = GetCellVal(ws, dataRow, "Fatty Matter", "Flow meter", "", "Kg/Ton Feed")
If IsNumeric(tempVal) Then
    fattyKgPerMT = tempVal
Else
    fattyKgPerMT = 0
End If

' Consumption - Methanol
tempVal = GetCellVal(ws, dataRow, "Methanol", "flowmeter", "Kg/Ton Feed", "")
If Not IsError(tempVal) And IsNumeric(tempVal) Then
    methanolVal = tempVal
End If

' Consumption - Sodium Methylate
tempVal = GetCellVal(ws, dataRow, "Sodium Methylate", "Flow meter", "", "Kg/Ton Feed")
If Not IsError(tempVal) And IsNumeric(tempVal) Then
    smVal = tempVal
End If

' Consumption - Steam
tempVal = GetCellVal(ws, dataRow, "Steam", "Flow meter", "", "Kg/Ton Feed")
If Not IsError(tempVal) And IsNumeric(tempVal) Then
    steamVal = tempVal
End If

' Consumption - Electricity
tempVal = GetCellVal(ws, dataRow, "Electricity", "Flow meter", "", "Kwh/Ton Feed")
If Not IsError(tempVal) And IsNumeric(tempVal) Then
    electVal = tempVal
End If



Debug.Print "Total feedKg: " & feedKg
Debug.Print "Total fameKg: " & fameKg
Debug.Print "Gly per MT: " & glyKgPerMT
Debug.Print "Fatty per MT: " & fattyKgPerMT



    ' Output ke sheet target
    With wsTarget
        .Cells(row, 1).Value = plantLabel: row = row + 1
        .Cells(row, 1).Value = "Quantity": row = row + 1
        .Cells(row, 1).Value = "Feed : " & Round(feedKg / 1000, 0) & " MT": row = row + 1
        .Cells(row, 1).Value = "Crude FAME : " & Round(fameKg / 1000, 0) & " MT": row = row + 1

        If IsNumeric(glyKgPerMT) Then
            .Cells(row, 1).Value = "Crude Glycerin : " & Format(glyKgPerMT, "0.00") & " kg/MT Feed"
        Else
            .Cells(row, 1).Value = "Crude Glycerin : N/A"
        End If
        row = row + 1

        If IsNumeric(fattyKgPerMT) Then
            .Cells(row, 1).Value = "Fatty Matter : " & Format(fattyKgPerMT, "0.00") & " kg/MT Feed"
        Else
            .Cells(row, 1).Value = "Fatty Matter : N/A"
        End If
        row = row + 1

        .Cells(row, 1).Value = "Consumption:": row = row + 1

        If IsNumeric(methanolVal) Then
            .Cells(row, 1).Value = "Methanol : " & Format(methanolVal, "0.00") & " kg/ton Feed"
        Else
            .Cells(row, 1).Value = "Methanol : N/A"
        End If
        row = row + 1

        If IsNumeric(smVal) Then
            .Cells(row, 1).Value = "Sodium Methylate : " & Format(smVal, "0.00") & " kg/ton Feed"
        Else
            .Cells(row, 1).Value = "Sodium Methylate : N/A"
        End If
        row = row + 1

        If IsNumeric(steamVal) Then
            .Cells(row, 1).Value = "Steam : " & Format(steamVal, "0.00") & " kg/ton Feed"
        Else
            .Cells(row, 1).Value = "Steam : N/A"
        End If
        row = row + 1

        If IsNumeric(electVal) Then
            .Cells(row, 1).Value = "Electricity : " & Format(electVal, "0.00") & " kWh/ton Feed"
        Else
            .Cells(row, 1).Value = "Electricity : N/A"
        End If
        row = row + 2
    End With
End Sub



Function GetCellVal(ws As Worksheet, targetRow As Long, _
                    header1 As String, header2 As String, _
                    header3 As String, header4 As String, _
                    Optional headerRow1 As Long = 7, _
                    Optional headerRow2 As Long = 8, _
                    Optional headerRow3 As Long = 9, _
                    Optional headerRow4 As Long = 10) As Double

    Dim col As Long, lastCol As Long
    Dim val1 As String, val2 As String, val3 As String, val4 As String
    Dim h1 As String, h2 As String, h3 As String, h4 As String

    On Error GoTo ErrorHandler

    lastCol = ws.Cells(headerRow1, ws.Columns.Count).End(xlToLeft).Column

    h1 = LCase(Trim(header1))
    h2 = LCase(Trim(header2))
    h3 = LCase(Trim(header3))
    h4 = LCase(Trim(header4))

    For col = 1 To lastCol
        val1 = LCase(Trim(GetMergedHeaderValue(ws, headerRow1, col)))
        val2 = LCase(Trim(GetMergedHeaderValue(ws, headerRow2, col)))
        val3 = LCase(Trim(GetMergedHeaderValue(ws, headerRow3, col)))
        val4 = LCase(Trim(GetMergedHeaderValue(ws, headerRow4, col)))

        ' Khusus Crude Fame: baris 8 & 9 merge (anggap val2 kosong, hanya gunakan val3)
        If InStr(val1, "crude fame") > 0 And _
           InStr(val3, h3) > 0 And InStr(val4, h4) > 0 Then
            GetCellVal = CDbl(ws.Cells(targetRow, col).Value)
            Exit Function
        End If

        ' Umum: semua header cocok secara longgar
        If InStr(val1, h1) > 0 And InStr(val2, h2) > 0 And _
           InStr(val3, h3) > 0 And InStr(val4, h4) > 0 Then
            GetCellVal = CDbl(ws.Cells(targetRow, col).Value)
            Exit Function
        End If
    Next col

    GetCellVal = 0
    Exit Function

ErrorHandler:
    Debug.Print "Hasil GetCellVal: ERROR"
    GetCellVal = 0
End Function




Function GetMergedHeaderValue(ws As Worksheet, headerRow As Long, col As Long) As String
    Dim cell As Range
    Set cell = ws.Cells(headerRow, col)

    ' Jika sel kosong, cek apakah bagian dari merge
    If IsEmpty(cell.Value) And cell.MergeCells Then
        GetMergedHeaderValue = cell.MergeArea.Cells(1, 1).Value
    Else
        GetMergedHeaderValue = cell.Value
    End If
End Function




' Fungsi bantu untuk mengambil nilai header dengan mempertimbangkan merged cells
Function GetMergedHeader(ws As Worksheet, headerRow As Long, col As Long) As String
    Dim val As String
    val = Trim(ws.Cells(headerRow, col).Value)
    
    If val = "" Then
        ' Cari ke atas jika cell kosong karena merged
        Do While val = "" And headerRow > 1
            headerRow = headerRow - 1
            val = Trim(ws.Cells(headerRow, col).Value)
        Loop
    End If
    
    GetMergedHeader = val
End Function





Function GetTextVal(ws As Worksheet, targetRow As Long, ParamArray headers() As Variant) As String
    Dim headerRow1 As Long: headerRow1 = 8
    Dim headerRow2 As Long: headerRow2 = 9
    Dim col As Long
    Dim i As Long, j As Long
    Dim lastCol As Long: lastCol = ws.Cells(headerRow1, ws.Columns.Count).End(xlToLeft).Column

    For col = 1 To lastCol
        j = 0
        For i = LBound(headers) To UBound(headers)
            Dim headerText As String
            If j Mod 2 = 0 Then
                headerText = LCase(Trim(ws.Cells(headerRow1, col).Value))
            Else
                headerText = LCase(Trim(ws.Cells(headerRow2, col).Value))
            End If

            If InStr(1, headerText, LCase(headers(i)), vbTextCompare) > 0 Then
                j = j + 1
            Else
                Exit For
            End If
        Next i

        If j = UBound(headers) + 1 Then
            GetTextVal = Trim(ws.Cells(targetRow, col).Value)
            Exit Function
        End If
    Next col

    GetTextVal = "" ' Default jika tidak ketemu
End Function

